
session4_Hello_World.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001818  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001b4  080019e8  080019e8  000119e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001b9c  08001b9c  000200a8  2**0
                  CONTENTS
  4 .ARM          00000000  08001b9c  08001b9c  000200a8  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001b9c  08001b9c  000200a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001b9c  08001b9c  00011b9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001ba0  08001ba0  00011ba0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000a8  20000000  08001ba4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  200000a8  08001c4c  000200a8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000dc  08001c4c  000200dc  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b57  00000000  00000000  000200d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003d1  00000000  00000000  00020c29  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00021000  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000108  00000000  00000000  00021140  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000020a9  00000000  00000000  00021248  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014e2  00000000  00000000  000232f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000093e1  00000000  00000000  000247d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002dbb4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000f38  00000000  00000000  0002dc04  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200000a8 	.word	0x200000a8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080019d0 	.word	0x080019d0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200000ac 	.word	0x200000ac
 800020c:	080019d0 	.word	0x080019d0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData ;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b084      	sub	sp, #16
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
 80002b8:	6039      	str	r1, [r7, #0]

	for ( unsigned int i = 0 ; i < len ; i++)
 80002ba:	2300      	movs	r3, #0
 80002bc:	60fb      	str	r3, [r7, #12]
 80002be:	e015      	b.n	80002ec <array_fill_numbers+0x3c>
	{
		pNumbers[i] = rand() % 1000;
 80002c0:	f000 fb0e 	bl	80008e0 <rand>
 80002c4:	4602      	mov	r2, r0
 80002c6:	68fb      	ldr	r3, [r7, #12]
 80002c8:	009b      	lsls	r3, r3, #2
 80002ca:	6879      	ldr	r1, [r7, #4]
 80002cc:	4419      	add	r1, r3
 80002ce:	4b0c      	ldr	r3, [pc, #48]	; (8000300 <array_fill_numbers+0x50>)
 80002d0:	fb83 0302 	smull	r0, r3, r3, r2
 80002d4:	1198      	asrs	r0, r3, #6
 80002d6:	17d3      	asrs	r3, r2, #31
 80002d8:	1ac3      	subs	r3, r0, r3
 80002da:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80002de:	fb00 f303 	mul.w	r3, r0, r3
 80002e2:	1ad3      	subs	r3, r2, r3
 80002e4:	600b      	str	r3, [r1, #0]
	for ( unsigned int i = 0 ; i < len ; i++)
 80002e6:	68fb      	ldr	r3, [r7, #12]
 80002e8:	3301      	adds	r3, #1
 80002ea:	60fb      	str	r3, [r7, #12]
 80002ec:	68fa      	ldr	r2, [r7, #12]
 80002ee:	683b      	ldr	r3, [r7, #0]
 80002f0:	429a      	cmp	r2, r3
 80002f2:	d3e5      	bcc.n	80002c0 <array_fill_numbers+0x10>
	}

}
 80002f4:	bf00      	nop
 80002f6:	bf00      	nop
 80002f8:	3710      	adds	r7, #16
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bd80      	pop	{r7, pc}
 80002fe:	bf00      	nop
 8000300:	10624dd3 	.word	0x10624dd3

08000304 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 8000304:	b580      	push	{r7, lr}
 8000306:	b086      	sub	sp, #24
 8000308:	af00      	add	r7, sp, #0
 800030a:	60f8      	str	r0, [r7, #12]
 800030c:	60b9      	str	r1, [r7, #8]
 800030e:	607a      	str	r2, [r7, #4]
	someData=10;
 8000310:	4b10      	ldr	r3, [pc, #64]	; (8000354 <display_numbers+0x50>)
 8000312:	220a      	movs	r2, #10
 8000314:	601a      	str	r2, [r3, #0]
	printf("%s",pMessage);
 8000316:	6879      	ldr	r1, [r7, #4]
 8000318:	480f      	ldr	r0, [pc, #60]	; (8000358 <display_numbers+0x54>)
 800031a:	f000 fa3f 	bl	800079c <iprintf>

	for (unsigned i = 0 ; i < len ; i++)
 800031e:	2300      	movs	r3, #0
 8000320:	617b      	str	r3, [r7, #20]
 8000322:	e00b      	b.n	800033c <display_numbers+0x38>
	{
		printf("%5d  ",pNumbers[i]);
 8000324:	697b      	ldr	r3, [r7, #20]
 8000326:	009b      	lsls	r3, r3, #2
 8000328:	68fa      	ldr	r2, [r7, #12]
 800032a:	4413      	add	r3, r2
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	4619      	mov	r1, r3
 8000330:	480a      	ldr	r0, [pc, #40]	; (800035c <display_numbers+0x58>)
 8000332:	f000 fa33 	bl	800079c <iprintf>
	for (unsigned i = 0 ; i < len ; i++)
 8000336:	697b      	ldr	r3, [r7, #20]
 8000338:	3301      	adds	r3, #1
 800033a:	617b      	str	r3, [r7, #20]
 800033c:	697a      	ldr	r2, [r7, #20]
 800033e:	68bb      	ldr	r3, [r7, #8]
 8000340:	429a      	cmp	r2, r3
 8000342:	d3ef      	bcc.n	8000324 <display_numbers+0x20>
	}

	printf("\n");
 8000344:	200a      	movs	r0, #10
 8000346:	f000 fa41 	bl	80007cc <putchar>
}
 800034a:	bf00      	nop
 800034c:	3718      	adds	r7, #24
 800034e:	46bd      	mov	sp, r7
 8000350:	bd80      	pop	{r7, pc}
 8000352:	bf00      	nop
 8000354:	200000c4 	.word	0x200000c4
 8000358:	080019e8 	.word	0x080019e8
 800035c:	080019ec 	.word	0x080019ec

08000360 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000360:	b480      	push	{r7}
 8000362:	b085      	sub	sp, #20
 8000364:	af00      	add	r7, sp, #0
 8000366:	6078      	str	r0, [r7, #4]
 8000368:	6039      	str	r1, [r7, #0]
	//	void (*FuncPtr)(void)=(void*)0x20000008;
	//	FuncPtr();
	someData = 20;
 800036a:	4b09      	ldr	r3, [pc, #36]	; (8000390 <swap_numbers+0x30>)
 800036c:	2214      	movs	r2, #20
 800036e:	601a      	str	r2, [r3, #0]
	int temp=*x;
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	60fb      	str	r3, [r7, #12]
	*x=*y;
 8000376:	683b      	ldr	r3, [r7, #0]
 8000378:	681a      	ldr	r2, [r3, #0]
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	601a      	str	r2, [r3, #0]
	*y=temp;
 800037e:	683b      	ldr	r3, [r7, #0]
 8000380:	68fa      	ldr	r2, [r7, #12]
 8000382:	601a      	str	r2, [r3, #0]

}
 8000384:	bf00      	nop
 8000386:	3714      	adds	r7, #20
 8000388:	46bd      	mov	sp, r7
 800038a:	bc80      	pop	{r7}
 800038c:	4770      	bx	lr
 800038e:	bf00      	nop
 8000390:	200000c4 	.word	0x200000c4

08000394 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	b086      	sub	sp, #24
 8000398:	af00      	add	r7, sp, #0
 800039a:	6078      	str	r0, [r7, #4]
 800039c:	6039      	str	r1, [r7, #0]

	int i,j,flag=0;
 800039e:	2300      	movs	r3, #0
 80003a0:	60fb      	str	r3, [r7, #12]

	for(i=0;i<len-1;i++)
 80003a2:	2300      	movs	r3, #0
 80003a4:	617b      	str	r3, [r7, #20]
 80003a6:	e02f      	b.n	8000408 <bubble_sort+0x74>
	{
		flag=0;
 80003a8:	2300      	movs	r3, #0
 80003aa:	60fb      	str	r3, [r7, #12]

		for(j=0;j<len-1-i;j++)
 80003ac:	2300      	movs	r3, #0
 80003ae:	613b      	str	r3, [r7, #16]
 80003b0:	e01d      	b.n	80003ee <bubble_sort+0x5a>
		{
			if(pNumbers[j] > pNumbers[j+1])
 80003b2:	693b      	ldr	r3, [r7, #16]
 80003b4:	009b      	lsls	r3, r3, #2
 80003b6:	687a      	ldr	r2, [r7, #4]
 80003b8:	4413      	add	r3, r2
 80003ba:	681a      	ldr	r2, [r3, #0]
 80003bc:	693b      	ldr	r3, [r7, #16]
 80003be:	3301      	adds	r3, #1
 80003c0:	009b      	lsls	r3, r3, #2
 80003c2:	6879      	ldr	r1, [r7, #4]
 80003c4:	440b      	add	r3, r1
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	429a      	cmp	r2, r3
 80003ca:	dd0d      	ble.n	80003e8 <bubble_sort+0x54>
			{
				swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 80003cc:	693b      	ldr	r3, [r7, #16]
 80003ce:	009b      	lsls	r3, r3, #2
 80003d0:	687a      	ldr	r2, [r7, #4]
 80003d2:	18d0      	adds	r0, r2, r3
 80003d4:	693b      	ldr	r3, [r7, #16]
 80003d6:	3301      	adds	r3, #1
 80003d8:	009b      	lsls	r3, r3, #2
 80003da:	687a      	ldr	r2, [r7, #4]
 80003dc:	4413      	add	r3, r2
 80003de:	4619      	mov	r1, r3
 80003e0:	f7ff ffbe 	bl	8000360 <swap_numbers>
				flag=1;
 80003e4:	2301      	movs	r3, #1
 80003e6:	60fb      	str	r3, [r7, #12]
		for(j=0;j<len-1-i;j++)
 80003e8:	693b      	ldr	r3, [r7, #16]
 80003ea:	3301      	adds	r3, #1
 80003ec:	613b      	str	r3, [r7, #16]
 80003ee:	697b      	ldr	r3, [r7, #20]
 80003f0:	683a      	ldr	r2, [r7, #0]
 80003f2:	1ad3      	subs	r3, r2, r3
 80003f4:	1e5a      	subs	r2, r3, #1
 80003f6:	693b      	ldr	r3, [r7, #16]
 80003f8:	429a      	cmp	r2, r3
 80003fa:	d8da      	bhi.n	80003b2 <bubble_sort+0x1e>
			}
		}

		if(flag==0)
 80003fc:	68fb      	ldr	r3, [r7, #12]
 80003fe:	2b00      	cmp	r3, #0
 8000400:	d008      	beq.n	8000414 <bubble_sort+0x80>
	for(i=0;i<len-1;i++)
 8000402:	697b      	ldr	r3, [r7, #20]
 8000404:	3301      	adds	r3, #1
 8000406:	617b      	str	r3, [r7, #20]
 8000408:	683b      	ldr	r3, [r7, #0]
 800040a:	1e5a      	subs	r2, r3, #1
 800040c:	697b      	ldr	r3, [r7, #20]
 800040e:	429a      	cmp	r2, r3
 8000410:	d8ca      	bhi.n	80003a8 <bubble_sort+0x14>
			break;
	}
}
 8000412:	e000      	b.n	8000416 <bubble_sort+0x82>
			break;
 8000414:	bf00      	nop
}
 8000416:	bf00      	nop
 8000418:	3718      	adds	r7, #24
 800041a:	46bd      	mov	sp, r7
 800041c:	bd80      	pop	{r7, pc}

0800041e <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 800041e:	b480      	push	{r7}
 8000420:	b087      	sub	sp, #28
 8000422:	af00      	add	r7, sp, #0
 8000424:	6078      	str	r0, [r7, #4]
 8000426:	6039      	str	r1, [r7, #0]

	int i,j,num;

	for(i=1 ; i<len ; i++)
 8000428:	2301      	movs	r3, #1
 800042a:	617b      	str	r3, [r7, #20]
 800042c:	e02c      	b.n	8000488 <insertion_sort+0x6a>
	{
		j=i-1;
 800042e:	697b      	ldr	r3, [r7, #20]
 8000430:	3b01      	subs	r3, #1
 8000432:	613b      	str	r3, [r7, #16]

		num = pNumbers[i];
 8000434:	697b      	ldr	r3, [r7, #20]
 8000436:	009b      	lsls	r3, r3, #2
 8000438:	687a      	ldr	r2, [r7, #4]
 800043a:	4413      	add	r3, r2
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	60fb      	str	r3, [r7, #12]

		while( (j>-1) && (pNumbers[j] > num) )
 8000440:	e00d      	b.n	800045e <insertion_sort+0x40>
		{
			pNumbers[j+1] = pNumbers[j];
 8000442:	693b      	ldr	r3, [r7, #16]
 8000444:	009b      	lsls	r3, r3, #2
 8000446:	687a      	ldr	r2, [r7, #4]
 8000448:	441a      	add	r2, r3
 800044a:	693b      	ldr	r3, [r7, #16]
 800044c:	3301      	adds	r3, #1
 800044e:	009b      	lsls	r3, r3, #2
 8000450:	6879      	ldr	r1, [r7, #4]
 8000452:	440b      	add	r3, r1
 8000454:	6812      	ldr	r2, [r2, #0]
 8000456:	601a      	str	r2, [r3, #0]
			j--;
 8000458:	693b      	ldr	r3, [r7, #16]
 800045a:	3b01      	subs	r3, #1
 800045c:	613b      	str	r3, [r7, #16]
		while( (j>-1) && (pNumbers[j] > num) )
 800045e:	693b      	ldr	r3, [r7, #16]
 8000460:	2b00      	cmp	r3, #0
 8000462:	db07      	blt.n	8000474 <insertion_sort+0x56>
 8000464:	693b      	ldr	r3, [r7, #16]
 8000466:	009b      	lsls	r3, r3, #2
 8000468:	687a      	ldr	r2, [r7, #4]
 800046a:	4413      	add	r3, r2
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	68fa      	ldr	r2, [r7, #12]
 8000470:	429a      	cmp	r2, r3
 8000472:	dbe6      	blt.n	8000442 <insertion_sort+0x24>
		}

		pNumbers[j+1]=num;
 8000474:	693b      	ldr	r3, [r7, #16]
 8000476:	3301      	adds	r3, #1
 8000478:	009b      	lsls	r3, r3, #2
 800047a:	687a      	ldr	r2, [r7, #4]
 800047c:	4413      	add	r3, r2
 800047e:	68fa      	ldr	r2, [r7, #12]
 8000480:	601a      	str	r2, [r3, #0]
	for(i=1 ; i<len ; i++)
 8000482:	697b      	ldr	r3, [r7, #20]
 8000484:	3301      	adds	r3, #1
 8000486:	617b      	str	r3, [r7, #20]
 8000488:	697b      	ldr	r3, [r7, #20]
 800048a:	683a      	ldr	r2, [r7, #0]
 800048c:	429a      	cmp	r2, r3
 800048e:	d8ce      	bhi.n	800042e <insertion_sort+0x10>
	}


}
 8000490:	bf00      	nop
 8000492:	bf00      	nop
 8000494:	371c      	adds	r7, #28
 8000496:	46bd      	mov	sp, r7
 8000498:	bc80      	pop	{r7}
 800049a:	4770      	bx	lr

0800049c <main>:

int main()
{
 800049c:	b580      	push	{r7, lr}
 800049e:	b082      	sub	sp, #8
 80004a0:	af00      	add	r7, sp, #0

	unsigned int len = sizeof(numbers)/sizeof(int);
 80004a2:	2311      	movs	r3, #17
 80004a4:	607b      	str	r3, [r7, #4]

	printf("Hello World\r\n");
 80004a6:	4816      	ldr	r0, [pc, #88]	; (8000500 <main+0x64>)
 80004a8:	f000 fa12 	bl	80008d0 <puts>

	array_fill_numbers(numbers,len);
 80004ac:	6879      	ldr	r1, [r7, #4]
 80004ae:	4815      	ldr	r0, [pc, #84]	; (8000504 <main+0x68>)
 80004b0:	f7ff fefe 	bl	80002b0 <array_fill_numbers>

	display_numbers(numbers,len,"B-unsorted array :");
 80004b4:	4a14      	ldr	r2, [pc, #80]	; (8000508 <main+0x6c>)
 80004b6:	6879      	ldr	r1, [r7, #4]
 80004b8:	4812      	ldr	r0, [pc, #72]	; (8000504 <main+0x68>)
 80004ba:	f7ff ff23 	bl	8000304 <display_numbers>

	bubble_sort(numbers,len);
 80004be:	6879      	ldr	r1, [r7, #4]
 80004c0:	4810      	ldr	r0, [pc, #64]	; (8000504 <main+0x68>)
 80004c2:	f7ff ff67 	bl	8000394 <bubble_sort>

	display_numbers(numbers,len,"B-sorted array   :");
 80004c6:	4a11      	ldr	r2, [pc, #68]	; (800050c <main+0x70>)
 80004c8:	6879      	ldr	r1, [r7, #4]
 80004ca:	480e      	ldr	r0, [pc, #56]	; (8000504 <main+0x68>)
 80004cc:	f7ff ff1a 	bl	8000304 <display_numbers>

	array_fill_numbers(numbers,len);
 80004d0:	6879      	ldr	r1, [r7, #4]
 80004d2:	480c      	ldr	r0, [pc, #48]	; (8000504 <main+0x68>)
 80004d4:	f7ff feec 	bl	80002b0 <array_fill_numbers>

	display_numbers(numbers,len,"I-unsorted array :");
 80004d8:	4a0d      	ldr	r2, [pc, #52]	; (8000510 <main+0x74>)
 80004da:	6879      	ldr	r1, [r7, #4]
 80004dc:	4809      	ldr	r0, [pc, #36]	; (8000504 <main+0x68>)
 80004de:	f7ff ff11 	bl	8000304 <display_numbers>

	insertion_sort(numbers,len);
 80004e2:	6879      	ldr	r1, [r7, #4]
 80004e4:	4807      	ldr	r0, [pc, #28]	; (8000504 <main+0x68>)
 80004e6:	f7ff ff9a 	bl	800041e <insertion_sort>

	display_numbers(numbers,len,"I-sorted array   :");
 80004ea:	4a0a      	ldr	r2, [pc, #40]	; (8000514 <main+0x78>)
 80004ec:	6879      	ldr	r1, [r7, #4]
 80004ee:	4805      	ldr	r0, [pc, #20]	; (8000504 <main+0x68>)
 80004f0:	f7ff ff08 	bl	8000304 <display_numbers>



	return 0;
 80004f4:	2300      	movs	r3, #0
}
 80004f6:	4618      	mov	r0, r3
 80004f8:	3708      	adds	r7, #8
 80004fa:	46bd      	mov	sp, r7
 80004fc:	bd80      	pop	{r7, pc}
 80004fe:	bf00      	nop
 8000500:	080019f4 	.word	0x080019f4
 8000504:	20000000 	.word	0x20000000
 8000508:	08001a04 	.word	0x08001a04
 800050c:	08001a18 	.word	0x08001a18
 8000510:	08001a2c 	.word	0x08001a2c
 8000514:	08001a40 	.word	0x08001a40

08000518 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000518:	b480      	push	{r7}
 800051a:	b083      	sub	sp, #12
 800051c:	af00      	add	r7, sp, #0
 800051e:	4603      	mov	r3, r0
 8000520:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000522:	4b0e      	ldr	r3, [pc, #56]	; (800055c <ITM_SendChar+0x44>)
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	4a0d      	ldr	r2, [pc, #52]	; (800055c <ITM_SendChar+0x44>)
 8000528:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800052c:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800052e:	4b0c      	ldr	r3, [pc, #48]	; (8000560 <ITM_SendChar+0x48>)
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	4a0b      	ldr	r2, [pc, #44]	; (8000560 <ITM_SendChar+0x48>)
 8000534:	f043 0301 	orr.w	r3, r3, #1
 8000538:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800053a:	bf00      	nop
 800053c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	f003 0301 	and.w	r3, r3, #1
 8000546:	2b00      	cmp	r3, #0
 8000548:	d0f8      	beq.n	800053c <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800054a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800054e:	79fb      	ldrb	r3, [r7, #7]
 8000550:	6013      	str	r3, [r2, #0]
}
 8000552:	bf00      	nop
 8000554:	370c      	adds	r7, #12
 8000556:	46bd      	mov	sp, r7
 8000558:	bc80      	pop	{r7}
 800055a:	4770      	bx	lr
 800055c:	e000edfc 	.word	0xe000edfc
 8000560:	e0000e00 	.word	0xe0000e00

08000564 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000564:	b480      	push	{r7}
 8000566:	af00      	add	r7, sp, #0
  return 1;
 8000568:	2301      	movs	r3, #1
}
 800056a:	4618      	mov	r0, r3
 800056c:	46bd      	mov	sp, r7
 800056e:	bc80      	pop	{r7}
 8000570:	4770      	bx	lr

08000572 <_kill>:

int _kill(int pid, int sig)
{
 8000572:	b580      	push	{r7, lr}
 8000574:	b082      	sub	sp, #8
 8000576:	af00      	add	r7, sp, #0
 8000578:	6078      	str	r0, [r7, #4]
 800057a:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800057c:	f000 f8dc 	bl	8000738 <__errno>
 8000580:	4603      	mov	r3, r0
 8000582:	2216      	movs	r2, #22
 8000584:	601a      	str	r2, [r3, #0]
  return -1;
 8000586:	f04f 33ff 	mov.w	r3, #4294967295
}
 800058a:	4618      	mov	r0, r3
 800058c:	3708      	adds	r7, #8
 800058e:	46bd      	mov	sp, r7
 8000590:	bd80      	pop	{r7, pc}

08000592 <_exit>:

void _exit (int status)
{
 8000592:	b580      	push	{r7, lr}
 8000594:	b082      	sub	sp, #8
 8000596:	af00      	add	r7, sp, #0
 8000598:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800059a:	f04f 31ff 	mov.w	r1, #4294967295
 800059e:	6878      	ldr	r0, [r7, #4]
 80005a0:	f7ff ffe7 	bl	8000572 <_kill>
  while (1) {}    /* Make sure we hang here */
 80005a4:	e7fe      	b.n	80005a4 <_exit+0x12>

080005a6 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80005a6:	b580      	push	{r7, lr}
 80005a8:	b086      	sub	sp, #24
 80005aa:	af00      	add	r7, sp, #0
 80005ac:	60f8      	str	r0, [r7, #12]
 80005ae:	60b9      	str	r1, [r7, #8]
 80005b0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005b2:	2300      	movs	r3, #0
 80005b4:	617b      	str	r3, [r7, #20]
 80005b6:	e00a      	b.n	80005ce <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80005b8:	f3af 8000 	nop.w
 80005bc:	4601      	mov	r1, r0
 80005be:	68bb      	ldr	r3, [r7, #8]
 80005c0:	1c5a      	adds	r2, r3, #1
 80005c2:	60ba      	str	r2, [r7, #8]
 80005c4:	b2ca      	uxtb	r2, r1
 80005c6:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005c8:	697b      	ldr	r3, [r7, #20]
 80005ca:	3301      	adds	r3, #1
 80005cc:	617b      	str	r3, [r7, #20]
 80005ce:	697a      	ldr	r2, [r7, #20]
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	429a      	cmp	r2, r3
 80005d4:	dbf0      	blt.n	80005b8 <_read+0x12>
  }

  return len;
 80005d6:	687b      	ldr	r3, [r7, #4]
}
 80005d8:	4618      	mov	r0, r3
 80005da:	3718      	adds	r7, #24
 80005dc:	46bd      	mov	sp, r7
 80005de:	bd80      	pop	{r7, pc}

080005e0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80005e0:	b580      	push	{r7, lr}
 80005e2:	b086      	sub	sp, #24
 80005e4:	af00      	add	r7, sp, #0
 80005e6:	60f8      	str	r0, [r7, #12]
 80005e8:	60b9      	str	r1, [r7, #8]
 80005ea:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80005ec:	2300      	movs	r3, #0
 80005ee:	617b      	str	r3, [r7, #20]
 80005f0:	e009      	b.n	8000606 <_write+0x26>
  {
//    __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 80005f2:	68bb      	ldr	r3, [r7, #8]
 80005f4:	1c5a      	adds	r2, r3, #1
 80005f6:	60ba      	str	r2, [r7, #8]
 80005f8:	781b      	ldrb	r3, [r3, #0]
 80005fa:	4618      	mov	r0, r3
 80005fc:	f7ff ff8c 	bl	8000518 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000600:	697b      	ldr	r3, [r7, #20]
 8000602:	3301      	adds	r3, #1
 8000604:	617b      	str	r3, [r7, #20]
 8000606:	697a      	ldr	r2, [r7, #20]
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	429a      	cmp	r2, r3
 800060c:	dbf1      	blt.n	80005f2 <_write+0x12>
  }
  return len;
 800060e:	687b      	ldr	r3, [r7, #4]
}
 8000610:	4618      	mov	r0, r3
 8000612:	3718      	adds	r7, #24
 8000614:	46bd      	mov	sp, r7
 8000616:	bd80      	pop	{r7, pc}

08000618 <_close>:

int _close(int file)
{
 8000618:	b480      	push	{r7}
 800061a:	b083      	sub	sp, #12
 800061c:	af00      	add	r7, sp, #0
 800061e:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000620:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000624:	4618      	mov	r0, r3
 8000626:	370c      	adds	r7, #12
 8000628:	46bd      	mov	sp, r7
 800062a:	bc80      	pop	{r7}
 800062c:	4770      	bx	lr

0800062e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800062e:	b480      	push	{r7}
 8000630:	b083      	sub	sp, #12
 8000632:	af00      	add	r7, sp, #0
 8000634:	6078      	str	r0, [r7, #4]
 8000636:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000638:	683b      	ldr	r3, [r7, #0]
 800063a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800063e:	605a      	str	r2, [r3, #4]
  return 0;
 8000640:	2300      	movs	r3, #0
}
 8000642:	4618      	mov	r0, r3
 8000644:	370c      	adds	r7, #12
 8000646:	46bd      	mov	sp, r7
 8000648:	bc80      	pop	{r7}
 800064a:	4770      	bx	lr

0800064c <_isatty>:

int _isatty(int file)
{
 800064c:	b480      	push	{r7}
 800064e:	b083      	sub	sp, #12
 8000650:	af00      	add	r7, sp, #0
 8000652:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000654:	2301      	movs	r3, #1
}
 8000656:	4618      	mov	r0, r3
 8000658:	370c      	adds	r7, #12
 800065a:	46bd      	mov	sp, r7
 800065c:	bc80      	pop	{r7}
 800065e:	4770      	bx	lr

08000660 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000660:	b480      	push	{r7}
 8000662:	b085      	sub	sp, #20
 8000664:	af00      	add	r7, sp, #0
 8000666:	60f8      	str	r0, [r7, #12]
 8000668:	60b9      	str	r1, [r7, #8]
 800066a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800066c:	2300      	movs	r3, #0
}
 800066e:	4618      	mov	r0, r3
 8000670:	3714      	adds	r7, #20
 8000672:	46bd      	mov	sp, r7
 8000674:	bc80      	pop	{r7}
 8000676:	4770      	bx	lr

08000678 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000678:	b580      	push	{r7, lr}
 800067a:	b086      	sub	sp, #24
 800067c:	af00      	add	r7, sp, #0
 800067e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000680:	4a14      	ldr	r2, [pc, #80]	; (80006d4 <_sbrk+0x5c>)
 8000682:	4b15      	ldr	r3, [pc, #84]	; (80006d8 <_sbrk+0x60>)
 8000684:	1ad3      	subs	r3, r2, r3
 8000686:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000688:	697b      	ldr	r3, [r7, #20]
 800068a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800068c:	4b13      	ldr	r3, [pc, #76]	; (80006dc <_sbrk+0x64>)
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	2b00      	cmp	r3, #0
 8000692:	d102      	bne.n	800069a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000694:	4b11      	ldr	r3, [pc, #68]	; (80006dc <_sbrk+0x64>)
 8000696:	4a12      	ldr	r2, [pc, #72]	; (80006e0 <_sbrk+0x68>)
 8000698:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800069a:	4b10      	ldr	r3, [pc, #64]	; (80006dc <_sbrk+0x64>)
 800069c:	681a      	ldr	r2, [r3, #0]
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	4413      	add	r3, r2
 80006a2:	693a      	ldr	r2, [r7, #16]
 80006a4:	429a      	cmp	r2, r3
 80006a6:	d207      	bcs.n	80006b8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80006a8:	f000 f846 	bl	8000738 <__errno>
 80006ac:	4603      	mov	r3, r0
 80006ae:	220c      	movs	r2, #12
 80006b0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80006b2:	f04f 33ff 	mov.w	r3, #4294967295
 80006b6:	e009      	b.n	80006cc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80006b8:	4b08      	ldr	r3, [pc, #32]	; (80006dc <_sbrk+0x64>)
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80006be:	4b07      	ldr	r3, [pc, #28]	; (80006dc <_sbrk+0x64>)
 80006c0:	681a      	ldr	r2, [r3, #0]
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	4413      	add	r3, r2
 80006c6:	4a05      	ldr	r2, [pc, #20]	; (80006dc <_sbrk+0x64>)
 80006c8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80006ca:	68fb      	ldr	r3, [r7, #12]
}
 80006cc:	4618      	mov	r0, r3
 80006ce:	3718      	adds	r7, #24
 80006d0:	46bd      	mov	sp, r7
 80006d2:	bd80      	pop	{r7, pc}
 80006d4:	20020000 	.word	0x20020000
 80006d8:	00000400 	.word	0x00000400
 80006dc:	200000c8 	.word	0x200000c8
 80006e0:	200000e0 	.word	0x200000e0

080006e4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006e4:	480d      	ldr	r0, [pc, #52]	; (800071c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006e6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006e8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006ec:	480c      	ldr	r0, [pc, #48]	; (8000720 <LoopForever+0x6>)
  ldr r1, =_edata
 80006ee:	490d      	ldr	r1, [pc, #52]	; (8000724 <LoopForever+0xa>)
  ldr r2, =_sidata
 80006f0:	4a0d      	ldr	r2, [pc, #52]	; (8000728 <LoopForever+0xe>)
  movs r3, #0
 80006f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006f4:	e002      	b.n	80006fc <LoopCopyDataInit>

080006f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006fa:	3304      	adds	r3, #4

080006fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000700:	d3f9      	bcc.n	80006f6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000702:	4a0a      	ldr	r2, [pc, #40]	; (800072c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000704:	4c0a      	ldr	r4, [pc, #40]	; (8000730 <LoopForever+0x16>)
  movs r3, #0
 8000706:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000708:	e001      	b.n	800070e <LoopFillZerobss>

0800070a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800070a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800070c:	3204      	adds	r2, #4

0800070e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800070e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000710:	d3fb      	bcc.n	800070a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000712:	f000 f817 	bl	8000744 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000716:	f7ff fec1 	bl	800049c <main>

0800071a <LoopForever>:

LoopForever:
  b LoopForever
 800071a:	e7fe      	b.n	800071a <LoopForever>
  ldr   r0, =_estack
 800071c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000720:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000724:	200000a8 	.word	0x200000a8
  ldr r2, =_sidata
 8000728:	08001ba4 	.word	0x08001ba4
  ldr r2, =_sbss
 800072c:	200000a8 	.word	0x200000a8
  ldr r4, =_ebss
 8000730:	200000dc 	.word	0x200000dc

08000734 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000734:	e7fe      	b.n	8000734 <ADC_IRQHandler>
	...

08000738 <__errno>:
 8000738:	4b01      	ldr	r3, [pc, #4]	; (8000740 <__errno+0x8>)
 800073a:	6818      	ldr	r0, [r3, #0]
 800073c:	4770      	bx	lr
 800073e:	bf00      	nop
 8000740:	20000044 	.word	0x20000044

08000744 <__libc_init_array>:
 8000744:	b570      	push	{r4, r5, r6, lr}
 8000746:	4d0d      	ldr	r5, [pc, #52]	; (800077c <__libc_init_array+0x38>)
 8000748:	4c0d      	ldr	r4, [pc, #52]	; (8000780 <__libc_init_array+0x3c>)
 800074a:	1b64      	subs	r4, r4, r5
 800074c:	10a4      	asrs	r4, r4, #2
 800074e:	2600      	movs	r6, #0
 8000750:	42a6      	cmp	r6, r4
 8000752:	d109      	bne.n	8000768 <__libc_init_array+0x24>
 8000754:	4d0b      	ldr	r5, [pc, #44]	; (8000784 <__libc_init_array+0x40>)
 8000756:	4c0c      	ldr	r4, [pc, #48]	; (8000788 <__libc_init_array+0x44>)
 8000758:	f001 f93a 	bl	80019d0 <_init>
 800075c:	1b64      	subs	r4, r4, r5
 800075e:	10a4      	asrs	r4, r4, #2
 8000760:	2600      	movs	r6, #0
 8000762:	42a6      	cmp	r6, r4
 8000764:	d105      	bne.n	8000772 <__libc_init_array+0x2e>
 8000766:	bd70      	pop	{r4, r5, r6, pc}
 8000768:	f855 3b04 	ldr.w	r3, [r5], #4
 800076c:	4798      	blx	r3
 800076e:	3601      	adds	r6, #1
 8000770:	e7ee      	b.n	8000750 <__libc_init_array+0xc>
 8000772:	f855 3b04 	ldr.w	r3, [r5], #4
 8000776:	4798      	blx	r3
 8000778:	3601      	adds	r6, #1
 800077a:	e7f2      	b.n	8000762 <__libc_init_array+0x1e>
 800077c:	08001b9c 	.word	0x08001b9c
 8000780:	08001b9c 	.word	0x08001b9c
 8000784:	08001b9c 	.word	0x08001b9c
 8000788:	08001ba0 	.word	0x08001ba0

0800078c <memset>:
 800078c:	4402      	add	r2, r0
 800078e:	4603      	mov	r3, r0
 8000790:	4293      	cmp	r3, r2
 8000792:	d100      	bne.n	8000796 <memset+0xa>
 8000794:	4770      	bx	lr
 8000796:	f803 1b01 	strb.w	r1, [r3], #1
 800079a:	e7f9      	b.n	8000790 <memset+0x4>

0800079c <iprintf>:
 800079c:	b40f      	push	{r0, r1, r2, r3}
 800079e:	4b0a      	ldr	r3, [pc, #40]	; (80007c8 <iprintf+0x2c>)
 80007a0:	b513      	push	{r0, r1, r4, lr}
 80007a2:	681c      	ldr	r4, [r3, #0]
 80007a4:	b124      	cbz	r4, 80007b0 <iprintf+0x14>
 80007a6:	69a3      	ldr	r3, [r4, #24]
 80007a8:	b913      	cbnz	r3, 80007b0 <iprintf+0x14>
 80007aa:	4620      	mov	r0, r4
 80007ac:	f000 faca 	bl	8000d44 <__sinit>
 80007b0:	ab05      	add	r3, sp, #20
 80007b2:	9a04      	ldr	r2, [sp, #16]
 80007b4:	68a1      	ldr	r1, [r4, #8]
 80007b6:	9301      	str	r3, [sp, #4]
 80007b8:	4620      	mov	r0, r4
 80007ba:	f000 fce9 	bl	8001190 <_vfiprintf_r>
 80007be:	b002      	add	sp, #8
 80007c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007c4:	b004      	add	sp, #16
 80007c6:	4770      	bx	lr
 80007c8:	20000044 	.word	0x20000044

080007cc <putchar>:
 80007cc:	b538      	push	{r3, r4, r5, lr}
 80007ce:	4b08      	ldr	r3, [pc, #32]	; (80007f0 <putchar+0x24>)
 80007d0:	681c      	ldr	r4, [r3, #0]
 80007d2:	4605      	mov	r5, r0
 80007d4:	b124      	cbz	r4, 80007e0 <putchar+0x14>
 80007d6:	69a3      	ldr	r3, [r4, #24]
 80007d8:	b913      	cbnz	r3, 80007e0 <putchar+0x14>
 80007da:	4620      	mov	r0, r4
 80007dc:	f000 fab2 	bl	8000d44 <__sinit>
 80007e0:	68a2      	ldr	r2, [r4, #8]
 80007e2:	4629      	mov	r1, r5
 80007e4:	4620      	mov	r0, r4
 80007e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80007ea:	f000 bf95 	b.w	8001718 <_putc_r>
 80007ee:	bf00      	nop
 80007f0:	20000044 	.word	0x20000044

080007f4 <_puts_r>:
 80007f4:	b570      	push	{r4, r5, r6, lr}
 80007f6:	460e      	mov	r6, r1
 80007f8:	4605      	mov	r5, r0
 80007fa:	b118      	cbz	r0, 8000804 <_puts_r+0x10>
 80007fc:	6983      	ldr	r3, [r0, #24]
 80007fe:	b90b      	cbnz	r3, 8000804 <_puts_r+0x10>
 8000800:	f000 faa0 	bl	8000d44 <__sinit>
 8000804:	69ab      	ldr	r3, [r5, #24]
 8000806:	68ac      	ldr	r4, [r5, #8]
 8000808:	b913      	cbnz	r3, 8000810 <_puts_r+0x1c>
 800080a:	4628      	mov	r0, r5
 800080c:	f000 fa9a 	bl	8000d44 <__sinit>
 8000810:	4b2c      	ldr	r3, [pc, #176]	; (80008c4 <_puts_r+0xd0>)
 8000812:	429c      	cmp	r4, r3
 8000814:	d120      	bne.n	8000858 <_puts_r+0x64>
 8000816:	686c      	ldr	r4, [r5, #4]
 8000818:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800081a:	07db      	lsls	r3, r3, #31
 800081c:	d405      	bmi.n	800082a <_puts_r+0x36>
 800081e:	89a3      	ldrh	r3, [r4, #12]
 8000820:	0598      	lsls	r0, r3, #22
 8000822:	d402      	bmi.n	800082a <_puts_r+0x36>
 8000824:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000826:	f000 fb3d 	bl	8000ea4 <__retarget_lock_acquire_recursive>
 800082a:	89a3      	ldrh	r3, [r4, #12]
 800082c:	0719      	lsls	r1, r3, #28
 800082e:	d51d      	bpl.n	800086c <_puts_r+0x78>
 8000830:	6923      	ldr	r3, [r4, #16]
 8000832:	b1db      	cbz	r3, 800086c <_puts_r+0x78>
 8000834:	3e01      	subs	r6, #1
 8000836:	68a3      	ldr	r3, [r4, #8]
 8000838:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800083c:	3b01      	subs	r3, #1
 800083e:	60a3      	str	r3, [r4, #8]
 8000840:	bb39      	cbnz	r1, 8000892 <_puts_r+0x9e>
 8000842:	2b00      	cmp	r3, #0
 8000844:	da38      	bge.n	80008b8 <_puts_r+0xc4>
 8000846:	4622      	mov	r2, r4
 8000848:	210a      	movs	r1, #10
 800084a:	4628      	mov	r0, r5
 800084c:	f000 f886 	bl	800095c <__swbuf_r>
 8000850:	3001      	adds	r0, #1
 8000852:	d011      	beq.n	8000878 <_puts_r+0x84>
 8000854:	250a      	movs	r5, #10
 8000856:	e011      	b.n	800087c <_puts_r+0x88>
 8000858:	4b1b      	ldr	r3, [pc, #108]	; (80008c8 <_puts_r+0xd4>)
 800085a:	429c      	cmp	r4, r3
 800085c:	d101      	bne.n	8000862 <_puts_r+0x6e>
 800085e:	68ac      	ldr	r4, [r5, #8]
 8000860:	e7da      	b.n	8000818 <_puts_r+0x24>
 8000862:	4b1a      	ldr	r3, [pc, #104]	; (80008cc <_puts_r+0xd8>)
 8000864:	429c      	cmp	r4, r3
 8000866:	bf08      	it	eq
 8000868:	68ec      	ldreq	r4, [r5, #12]
 800086a:	e7d5      	b.n	8000818 <_puts_r+0x24>
 800086c:	4621      	mov	r1, r4
 800086e:	4628      	mov	r0, r5
 8000870:	f000 f8c6 	bl	8000a00 <__swsetup_r>
 8000874:	2800      	cmp	r0, #0
 8000876:	d0dd      	beq.n	8000834 <_puts_r+0x40>
 8000878:	f04f 35ff 	mov.w	r5, #4294967295
 800087c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800087e:	07da      	lsls	r2, r3, #31
 8000880:	d405      	bmi.n	800088e <_puts_r+0x9a>
 8000882:	89a3      	ldrh	r3, [r4, #12]
 8000884:	059b      	lsls	r3, r3, #22
 8000886:	d402      	bmi.n	800088e <_puts_r+0x9a>
 8000888:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800088a:	f000 fb0c 	bl	8000ea6 <__retarget_lock_release_recursive>
 800088e:	4628      	mov	r0, r5
 8000890:	bd70      	pop	{r4, r5, r6, pc}
 8000892:	2b00      	cmp	r3, #0
 8000894:	da04      	bge.n	80008a0 <_puts_r+0xac>
 8000896:	69a2      	ldr	r2, [r4, #24]
 8000898:	429a      	cmp	r2, r3
 800089a:	dc06      	bgt.n	80008aa <_puts_r+0xb6>
 800089c:	290a      	cmp	r1, #10
 800089e:	d004      	beq.n	80008aa <_puts_r+0xb6>
 80008a0:	6823      	ldr	r3, [r4, #0]
 80008a2:	1c5a      	adds	r2, r3, #1
 80008a4:	6022      	str	r2, [r4, #0]
 80008a6:	7019      	strb	r1, [r3, #0]
 80008a8:	e7c5      	b.n	8000836 <_puts_r+0x42>
 80008aa:	4622      	mov	r2, r4
 80008ac:	4628      	mov	r0, r5
 80008ae:	f000 f855 	bl	800095c <__swbuf_r>
 80008b2:	3001      	adds	r0, #1
 80008b4:	d1bf      	bne.n	8000836 <_puts_r+0x42>
 80008b6:	e7df      	b.n	8000878 <_puts_r+0x84>
 80008b8:	6823      	ldr	r3, [r4, #0]
 80008ba:	250a      	movs	r5, #10
 80008bc:	1c5a      	adds	r2, r3, #1
 80008be:	6022      	str	r2, [r4, #0]
 80008c0:	701d      	strb	r5, [r3, #0]
 80008c2:	e7db      	b.n	800087c <_puts_r+0x88>
 80008c4:	08001b28 	.word	0x08001b28
 80008c8:	08001b48 	.word	0x08001b48
 80008cc:	08001b08 	.word	0x08001b08

080008d0 <puts>:
 80008d0:	4b02      	ldr	r3, [pc, #8]	; (80008dc <puts+0xc>)
 80008d2:	4601      	mov	r1, r0
 80008d4:	6818      	ldr	r0, [r3, #0]
 80008d6:	f7ff bf8d 	b.w	80007f4 <_puts_r>
 80008da:	bf00      	nop
 80008dc:	20000044 	.word	0x20000044

080008e0 <rand>:
 80008e0:	4b16      	ldr	r3, [pc, #88]	; (800093c <rand+0x5c>)
 80008e2:	b510      	push	{r4, lr}
 80008e4:	681c      	ldr	r4, [r3, #0]
 80008e6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80008e8:	b9b3      	cbnz	r3, 8000918 <rand+0x38>
 80008ea:	2018      	movs	r0, #24
 80008ec:	f000 fb42 	bl	8000f74 <malloc>
 80008f0:	4602      	mov	r2, r0
 80008f2:	63a0      	str	r0, [r4, #56]	; 0x38
 80008f4:	b920      	cbnz	r0, 8000900 <rand+0x20>
 80008f6:	4b12      	ldr	r3, [pc, #72]	; (8000940 <rand+0x60>)
 80008f8:	4812      	ldr	r0, [pc, #72]	; (8000944 <rand+0x64>)
 80008fa:	214e      	movs	r1, #78	; 0x4e
 80008fc:	f000 f8ee 	bl	8000adc <__assert_func>
 8000900:	4911      	ldr	r1, [pc, #68]	; (8000948 <rand+0x68>)
 8000902:	4b12      	ldr	r3, [pc, #72]	; (800094c <rand+0x6c>)
 8000904:	e9c0 1300 	strd	r1, r3, [r0]
 8000908:	4b11      	ldr	r3, [pc, #68]	; (8000950 <rand+0x70>)
 800090a:	6083      	str	r3, [r0, #8]
 800090c:	230b      	movs	r3, #11
 800090e:	8183      	strh	r3, [r0, #12]
 8000910:	2100      	movs	r1, #0
 8000912:	2001      	movs	r0, #1
 8000914:	e9c2 0104 	strd	r0, r1, [r2, #16]
 8000918:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 800091a:	4a0e      	ldr	r2, [pc, #56]	; (8000954 <rand+0x74>)
 800091c:	6920      	ldr	r0, [r4, #16]
 800091e:	6963      	ldr	r3, [r4, #20]
 8000920:	490d      	ldr	r1, [pc, #52]	; (8000958 <rand+0x78>)
 8000922:	4342      	muls	r2, r0
 8000924:	fb01 2203 	mla	r2, r1, r3, r2
 8000928:	fba0 0101 	umull	r0, r1, r0, r1
 800092c:	1c43      	adds	r3, r0, #1
 800092e:	eb42 0001 	adc.w	r0, r2, r1
 8000932:	e9c4 3004 	strd	r3, r0, [r4, #16]
 8000936:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 800093a:	bd10      	pop	{r4, pc}
 800093c:	20000044 	.word	0x20000044
 8000940:	08001a58 	.word	0x08001a58
 8000944:	08001a6f 	.word	0x08001a6f
 8000948:	abcd330e 	.word	0xabcd330e
 800094c:	e66d1234 	.word	0xe66d1234
 8000950:	0005deec 	.word	0x0005deec
 8000954:	5851f42d 	.word	0x5851f42d
 8000958:	4c957f2d 	.word	0x4c957f2d

0800095c <__swbuf_r>:
 800095c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800095e:	460e      	mov	r6, r1
 8000960:	4614      	mov	r4, r2
 8000962:	4605      	mov	r5, r0
 8000964:	b118      	cbz	r0, 800096e <__swbuf_r+0x12>
 8000966:	6983      	ldr	r3, [r0, #24]
 8000968:	b90b      	cbnz	r3, 800096e <__swbuf_r+0x12>
 800096a:	f000 f9eb 	bl	8000d44 <__sinit>
 800096e:	4b21      	ldr	r3, [pc, #132]	; (80009f4 <__swbuf_r+0x98>)
 8000970:	429c      	cmp	r4, r3
 8000972:	d12b      	bne.n	80009cc <__swbuf_r+0x70>
 8000974:	686c      	ldr	r4, [r5, #4]
 8000976:	69a3      	ldr	r3, [r4, #24]
 8000978:	60a3      	str	r3, [r4, #8]
 800097a:	89a3      	ldrh	r3, [r4, #12]
 800097c:	071a      	lsls	r2, r3, #28
 800097e:	d52f      	bpl.n	80009e0 <__swbuf_r+0x84>
 8000980:	6923      	ldr	r3, [r4, #16]
 8000982:	b36b      	cbz	r3, 80009e0 <__swbuf_r+0x84>
 8000984:	6923      	ldr	r3, [r4, #16]
 8000986:	6820      	ldr	r0, [r4, #0]
 8000988:	1ac0      	subs	r0, r0, r3
 800098a:	6963      	ldr	r3, [r4, #20]
 800098c:	b2f6      	uxtb	r6, r6
 800098e:	4283      	cmp	r3, r0
 8000990:	4637      	mov	r7, r6
 8000992:	dc04      	bgt.n	800099e <__swbuf_r+0x42>
 8000994:	4621      	mov	r1, r4
 8000996:	4628      	mov	r0, r5
 8000998:	f000 f940 	bl	8000c1c <_fflush_r>
 800099c:	bb30      	cbnz	r0, 80009ec <__swbuf_r+0x90>
 800099e:	68a3      	ldr	r3, [r4, #8]
 80009a0:	3b01      	subs	r3, #1
 80009a2:	60a3      	str	r3, [r4, #8]
 80009a4:	6823      	ldr	r3, [r4, #0]
 80009a6:	1c5a      	adds	r2, r3, #1
 80009a8:	6022      	str	r2, [r4, #0]
 80009aa:	701e      	strb	r6, [r3, #0]
 80009ac:	6963      	ldr	r3, [r4, #20]
 80009ae:	3001      	adds	r0, #1
 80009b0:	4283      	cmp	r3, r0
 80009b2:	d004      	beq.n	80009be <__swbuf_r+0x62>
 80009b4:	89a3      	ldrh	r3, [r4, #12]
 80009b6:	07db      	lsls	r3, r3, #31
 80009b8:	d506      	bpl.n	80009c8 <__swbuf_r+0x6c>
 80009ba:	2e0a      	cmp	r6, #10
 80009bc:	d104      	bne.n	80009c8 <__swbuf_r+0x6c>
 80009be:	4621      	mov	r1, r4
 80009c0:	4628      	mov	r0, r5
 80009c2:	f000 f92b 	bl	8000c1c <_fflush_r>
 80009c6:	b988      	cbnz	r0, 80009ec <__swbuf_r+0x90>
 80009c8:	4638      	mov	r0, r7
 80009ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009cc:	4b0a      	ldr	r3, [pc, #40]	; (80009f8 <__swbuf_r+0x9c>)
 80009ce:	429c      	cmp	r4, r3
 80009d0:	d101      	bne.n	80009d6 <__swbuf_r+0x7a>
 80009d2:	68ac      	ldr	r4, [r5, #8]
 80009d4:	e7cf      	b.n	8000976 <__swbuf_r+0x1a>
 80009d6:	4b09      	ldr	r3, [pc, #36]	; (80009fc <__swbuf_r+0xa0>)
 80009d8:	429c      	cmp	r4, r3
 80009da:	bf08      	it	eq
 80009dc:	68ec      	ldreq	r4, [r5, #12]
 80009de:	e7ca      	b.n	8000976 <__swbuf_r+0x1a>
 80009e0:	4621      	mov	r1, r4
 80009e2:	4628      	mov	r0, r5
 80009e4:	f000 f80c 	bl	8000a00 <__swsetup_r>
 80009e8:	2800      	cmp	r0, #0
 80009ea:	d0cb      	beq.n	8000984 <__swbuf_r+0x28>
 80009ec:	f04f 37ff 	mov.w	r7, #4294967295
 80009f0:	e7ea      	b.n	80009c8 <__swbuf_r+0x6c>
 80009f2:	bf00      	nop
 80009f4:	08001b28 	.word	0x08001b28
 80009f8:	08001b48 	.word	0x08001b48
 80009fc:	08001b08 	.word	0x08001b08

08000a00 <__swsetup_r>:
 8000a00:	4b32      	ldr	r3, [pc, #200]	; (8000acc <__swsetup_r+0xcc>)
 8000a02:	b570      	push	{r4, r5, r6, lr}
 8000a04:	681d      	ldr	r5, [r3, #0]
 8000a06:	4606      	mov	r6, r0
 8000a08:	460c      	mov	r4, r1
 8000a0a:	b125      	cbz	r5, 8000a16 <__swsetup_r+0x16>
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	b913      	cbnz	r3, 8000a16 <__swsetup_r+0x16>
 8000a10:	4628      	mov	r0, r5
 8000a12:	f000 f997 	bl	8000d44 <__sinit>
 8000a16:	4b2e      	ldr	r3, [pc, #184]	; (8000ad0 <__swsetup_r+0xd0>)
 8000a18:	429c      	cmp	r4, r3
 8000a1a:	d10f      	bne.n	8000a3c <__swsetup_r+0x3c>
 8000a1c:	686c      	ldr	r4, [r5, #4]
 8000a1e:	89a3      	ldrh	r3, [r4, #12]
 8000a20:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000a24:	0719      	lsls	r1, r3, #28
 8000a26:	d42c      	bmi.n	8000a82 <__swsetup_r+0x82>
 8000a28:	06dd      	lsls	r5, r3, #27
 8000a2a:	d411      	bmi.n	8000a50 <__swsetup_r+0x50>
 8000a2c:	2309      	movs	r3, #9
 8000a2e:	6033      	str	r3, [r6, #0]
 8000a30:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000a34:	81a3      	strh	r3, [r4, #12]
 8000a36:	f04f 30ff 	mov.w	r0, #4294967295
 8000a3a:	e03e      	b.n	8000aba <__swsetup_r+0xba>
 8000a3c:	4b25      	ldr	r3, [pc, #148]	; (8000ad4 <__swsetup_r+0xd4>)
 8000a3e:	429c      	cmp	r4, r3
 8000a40:	d101      	bne.n	8000a46 <__swsetup_r+0x46>
 8000a42:	68ac      	ldr	r4, [r5, #8]
 8000a44:	e7eb      	b.n	8000a1e <__swsetup_r+0x1e>
 8000a46:	4b24      	ldr	r3, [pc, #144]	; (8000ad8 <__swsetup_r+0xd8>)
 8000a48:	429c      	cmp	r4, r3
 8000a4a:	bf08      	it	eq
 8000a4c:	68ec      	ldreq	r4, [r5, #12]
 8000a4e:	e7e6      	b.n	8000a1e <__swsetup_r+0x1e>
 8000a50:	0758      	lsls	r0, r3, #29
 8000a52:	d512      	bpl.n	8000a7a <__swsetup_r+0x7a>
 8000a54:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000a56:	b141      	cbz	r1, 8000a6a <__swsetup_r+0x6a>
 8000a58:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000a5c:	4299      	cmp	r1, r3
 8000a5e:	d002      	beq.n	8000a66 <__swsetup_r+0x66>
 8000a60:	4630      	mov	r0, r6
 8000a62:	f000 fa8f 	bl	8000f84 <_free_r>
 8000a66:	2300      	movs	r3, #0
 8000a68:	6363      	str	r3, [r4, #52]	; 0x34
 8000a6a:	89a3      	ldrh	r3, [r4, #12]
 8000a6c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000a70:	81a3      	strh	r3, [r4, #12]
 8000a72:	2300      	movs	r3, #0
 8000a74:	6063      	str	r3, [r4, #4]
 8000a76:	6923      	ldr	r3, [r4, #16]
 8000a78:	6023      	str	r3, [r4, #0]
 8000a7a:	89a3      	ldrh	r3, [r4, #12]
 8000a7c:	f043 0308 	orr.w	r3, r3, #8
 8000a80:	81a3      	strh	r3, [r4, #12]
 8000a82:	6923      	ldr	r3, [r4, #16]
 8000a84:	b94b      	cbnz	r3, 8000a9a <__swsetup_r+0x9a>
 8000a86:	89a3      	ldrh	r3, [r4, #12]
 8000a88:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000a8c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000a90:	d003      	beq.n	8000a9a <__swsetup_r+0x9a>
 8000a92:	4621      	mov	r1, r4
 8000a94:	4630      	mov	r0, r6
 8000a96:	f000 fa2d 	bl	8000ef4 <__smakebuf_r>
 8000a9a:	89a0      	ldrh	r0, [r4, #12]
 8000a9c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000aa0:	f010 0301 	ands.w	r3, r0, #1
 8000aa4:	d00a      	beq.n	8000abc <__swsetup_r+0xbc>
 8000aa6:	2300      	movs	r3, #0
 8000aa8:	60a3      	str	r3, [r4, #8]
 8000aaa:	6963      	ldr	r3, [r4, #20]
 8000aac:	425b      	negs	r3, r3
 8000aae:	61a3      	str	r3, [r4, #24]
 8000ab0:	6923      	ldr	r3, [r4, #16]
 8000ab2:	b943      	cbnz	r3, 8000ac6 <__swsetup_r+0xc6>
 8000ab4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000ab8:	d1ba      	bne.n	8000a30 <__swsetup_r+0x30>
 8000aba:	bd70      	pop	{r4, r5, r6, pc}
 8000abc:	0781      	lsls	r1, r0, #30
 8000abe:	bf58      	it	pl
 8000ac0:	6963      	ldrpl	r3, [r4, #20]
 8000ac2:	60a3      	str	r3, [r4, #8]
 8000ac4:	e7f4      	b.n	8000ab0 <__swsetup_r+0xb0>
 8000ac6:	2000      	movs	r0, #0
 8000ac8:	e7f7      	b.n	8000aba <__swsetup_r+0xba>
 8000aca:	bf00      	nop
 8000acc:	20000044 	.word	0x20000044
 8000ad0:	08001b28 	.word	0x08001b28
 8000ad4:	08001b48 	.word	0x08001b48
 8000ad8:	08001b08 	.word	0x08001b08

08000adc <__assert_func>:
 8000adc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000ade:	4614      	mov	r4, r2
 8000ae0:	461a      	mov	r2, r3
 8000ae2:	4b09      	ldr	r3, [pc, #36]	; (8000b08 <__assert_func+0x2c>)
 8000ae4:	681b      	ldr	r3, [r3, #0]
 8000ae6:	4605      	mov	r5, r0
 8000ae8:	68d8      	ldr	r0, [r3, #12]
 8000aea:	b14c      	cbz	r4, 8000b00 <__assert_func+0x24>
 8000aec:	4b07      	ldr	r3, [pc, #28]	; (8000b0c <__assert_func+0x30>)
 8000aee:	9100      	str	r1, [sp, #0]
 8000af0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000af4:	4906      	ldr	r1, [pc, #24]	; (8000b10 <__assert_func+0x34>)
 8000af6:	462b      	mov	r3, r5
 8000af8:	f000 f9a2 	bl	8000e40 <fiprintf>
 8000afc:	f000 feba 	bl	8001874 <abort>
 8000b00:	4b04      	ldr	r3, [pc, #16]	; (8000b14 <__assert_func+0x38>)
 8000b02:	461c      	mov	r4, r3
 8000b04:	e7f3      	b.n	8000aee <__assert_func+0x12>
 8000b06:	bf00      	nop
 8000b08:	20000044 	.word	0x20000044
 8000b0c:	08001aca 	.word	0x08001aca
 8000b10:	08001ad7 	.word	0x08001ad7
 8000b14:	08001b05 	.word	0x08001b05

08000b18 <__sflush_r>:
 8000b18:	898a      	ldrh	r2, [r1, #12]
 8000b1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b1c:	4605      	mov	r5, r0
 8000b1e:	0710      	lsls	r0, r2, #28
 8000b20:	460c      	mov	r4, r1
 8000b22:	d457      	bmi.n	8000bd4 <__sflush_r+0xbc>
 8000b24:	684b      	ldr	r3, [r1, #4]
 8000b26:	2b00      	cmp	r3, #0
 8000b28:	dc04      	bgt.n	8000b34 <__sflush_r+0x1c>
 8000b2a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000b2c:	2b00      	cmp	r3, #0
 8000b2e:	dc01      	bgt.n	8000b34 <__sflush_r+0x1c>
 8000b30:	2000      	movs	r0, #0
 8000b32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b34:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000b36:	2e00      	cmp	r6, #0
 8000b38:	d0fa      	beq.n	8000b30 <__sflush_r+0x18>
 8000b3a:	2300      	movs	r3, #0
 8000b3c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000b40:	682f      	ldr	r7, [r5, #0]
 8000b42:	602b      	str	r3, [r5, #0]
 8000b44:	d032      	beq.n	8000bac <__sflush_r+0x94>
 8000b46:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000b48:	89a3      	ldrh	r3, [r4, #12]
 8000b4a:	075a      	lsls	r2, r3, #29
 8000b4c:	d505      	bpl.n	8000b5a <__sflush_r+0x42>
 8000b4e:	6863      	ldr	r3, [r4, #4]
 8000b50:	1ac0      	subs	r0, r0, r3
 8000b52:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000b54:	b10b      	cbz	r3, 8000b5a <__sflush_r+0x42>
 8000b56:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000b58:	1ac0      	subs	r0, r0, r3
 8000b5a:	2300      	movs	r3, #0
 8000b5c:	4602      	mov	r2, r0
 8000b5e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000b60:	6a21      	ldr	r1, [r4, #32]
 8000b62:	4628      	mov	r0, r5
 8000b64:	47b0      	blx	r6
 8000b66:	1c43      	adds	r3, r0, #1
 8000b68:	89a3      	ldrh	r3, [r4, #12]
 8000b6a:	d106      	bne.n	8000b7a <__sflush_r+0x62>
 8000b6c:	6829      	ldr	r1, [r5, #0]
 8000b6e:	291d      	cmp	r1, #29
 8000b70:	d82c      	bhi.n	8000bcc <__sflush_r+0xb4>
 8000b72:	4a29      	ldr	r2, [pc, #164]	; (8000c18 <__sflush_r+0x100>)
 8000b74:	40ca      	lsrs	r2, r1
 8000b76:	07d6      	lsls	r6, r2, #31
 8000b78:	d528      	bpl.n	8000bcc <__sflush_r+0xb4>
 8000b7a:	2200      	movs	r2, #0
 8000b7c:	6062      	str	r2, [r4, #4]
 8000b7e:	04d9      	lsls	r1, r3, #19
 8000b80:	6922      	ldr	r2, [r4, #16]
 8000b82:	6022      	str	r2, [r4, #0]
 8000b84:	d504      	bpl.n	8000b90 <__sflush_r+0x78>
 8000b86:	1c42      	adds	r2, r0, #1
 8000b88:	d101      	bne.n	8000b8e <__sflush_r+0x76>
 8000b8a:	682b      	ldr	r3, [r5, #0]
 8000b8c:	b903      	cbnz	r3, 8000b90 <__sflush_r+0x78>
 8000b8e:	6560      	str	r0, [r4, #84]	; 0x54
 8000b90:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000b92:	602f      	str	r7, [r5, #0]
 8000b94:	2900      	cmp	r1, #0
 8000b96:	d0cb      	beq.n	8000b30 <__sflush_r+0x18>
 8000b98:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000b9c:	4299      	cmp	r1, r3
 8000b9e:	d002      	beq.n	8000ba6 <__sflush_r+0x8e>
 8000ba0:	4628      	mov	r0, r5
 8000ba2:	f000 f9ef 	bl	8000f84 <_free_r>
 8000ba6:	2000      	movs	r0, #0
 8000ba8:	6360      	str	r0, [r4, #52]	; 0x34
 8000baa:	e7c2      	b.n	8000b32 <__sflush_r+0x1a>
 8000bac:	6a21      	ldr	r1, [r4, #32]
 8000bae:	2301      	movs	r3, #1
 8000bb0:	4628      	mov	r0, r5
 8000bb2:	47b0      	blx	r6
 8000bb4:	1c41      	adds	r1, r0, #1
 8000bb6:	d1c7      	bne.n	8000b48 <__sflush_r+0x30>
 8000bb8:	682b      	ldr	r3, [r5, #0]
 8000bba:	2b00      	cmp	r3, #0
 8000bbc:	d0c4      	beq.n	8000b48 <__sflush_r+0x30>
 8000bbe:	2b1d      	cmp	r3, #29
 8000bc0:	d001      	beq.n	8000bc6 <__sflush_r+0xae>
 8000bc2:	2b16      	cmp	r3, #22
 8000bc4:	d101      	bne.n	8000bca <__sflush_r+0xb2>
 8000bc6:	602f      	str	r7, [r5, #0]
 8000bc8:	e7b2      	b.n	8000b30 <__sflush_r+0x18>
 8000bca:	89a3      	ldrh	r3, [r4, #12]
 8000bcc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000bd0:	81a3      	strh	r3, [r4, #12]
 8000bd2:	e7ae      	b.n	8000b32 <__sflush_r+0x1a>
 8000bd4:	690f      	ldr	r7, [r1, #16]
 8000bd6:	2f00      	cmp	r7, #0
 8000bd8:	d0aa      	beq.n	8000b30 <__sflush_r+0x18>
 8000bda:	0793      	lsls	r3, r2, #30
 8000bdc:	680e      	ldr	r6, [r1, #0]
 8000bde:	bf08      	it	eq
 8000be0:	694b      	ldreq	r3, [r1, #20]
 8000be2:	600f      	str	r7, [r1, #0]
 8000be4:	bf18      	it	ne
 8000be6:	2300      	movne	r3, #0
 8000be8:	1bf6      	subs	r6, r6, r7
 8000bea:	608b      	str	r3, [r1, #8]
 8000bec:	2e00      	cmp	r6, #0
 8000bee:	dd9f      	ble.n	8000b30 <__sflush_r+0x18>
 8000bf0:	6a21      	ldr	r1, [r4, #32]
 8000bf2:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000bf6:	4633      	mov	r3, r6
 8000bf8:	463a      	mov	r2, r7
 8000bfa:	4628      	mov	r0, r5
 8000bfc:	47e0      	blx	ip
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	dc06      	bgt.n	8000c10 <__sflush_r+0xf8>
 8000c02:	89a3      	ldrh	r3, [r4, #12]
 8000c04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000c08:	81a3      	strh	r3, [r4, #12]
 8000c0a:	f04f 30ff 	mov.w	r0, #4294967295
 8000c0e:	e790      	b.n	8000b32 <__sflush_r+0x1a>
 8000c10:	4407      	add	r7, r0
 8000c12:	1a36      	subs	r6, r6, r0
 8000c14:	e7ea      	b.n	8000bec <__sflush_r+0xd4>
 8000c16:	bf00      	nop
 8000c18:	20400001 	.word	0x20400001

08000c1c <_fflush_r>:
 8000c1c:	b538      	push	{r3, r4, r5, lr}
 8000c1e:	690b      	ldr	r3, [r1, #16]
 8000c20:	4605      	mov	r5, r0
 8000c22:	460c      	mov	r4, r1
 8000c24:	b913      	cbnz	r3, 8000c2c <_fflush_r+0x10>
 8000c26:	2500      	movs	r5, #0
 8000c28:	4628      	mov	r0, r5
 8000c2a:	bd38      	pop	{r3, r4, r5, pc}
 8000c2c:	b118      	cbz	r0, 8000c36 <_fflush_r+0x1a>
 8000c2e:	6983      	ldr	r3, [r0, #24]
 8000c30:	b90b      	cbnz	r3, 8000c36 <_fflush_r+0x1a>
 8000c32:	f000 f887 	bl	8000d44 <__sinit>
 8000c36:	4b14      	ldr	r3, [pc, #80]	; (8000c88 <_fflush_r+0x6c>)
 8000c38:	429c      	cmp	r4, r3
 8000c3a:	d11b      	bne.n	8000c74 <_fflush_r+0x58>
 8000c3c:	686c      	ldr	r4, [r5, #4]
 8000c3e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c42:	2b00      	cmp	r3, #0
 8000c44:	d0ef      	beq.n	8000c26 <_fflush_r+0xa>
 8000c46:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000c48:	07d0      	lsls	r0, r2, #31
 8000c4a:	d404      	bmi.n	8000c56 <_fflush_r+0x3a>
 8000c4c:	0599      	lsls	r1, r3, #22
 8000c4e:	d402      	bmi.n	8000c56 <_fflush_r+0x3a>
 8000c50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000c52:	f000 f927 	bl	8000ea4 <__retarget_lock_acquire_recursive>
 8000c56:	4628      	mov	r0, r5
 8000c58:	4621      	mov	r1, r4
 8000c5a:	f7ff ff5d 	bl	8000b18 <__sflush_r>
 8000c5e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000c60:	07da      	lsls	r2, r3, #31
 8000c62:	4605      	mov	r5, r0
 8000c64:	d4e0      	bmi.n	8000c28 <_fflush_r+0xc>
 8000c66:	89a3      	ldrh	r3, [r4, #12]
 8000c68:	059b      	lsls	r3, r3, #22
 8000c6a:	d4dd      	bmi.n	8000c28 <_fflush_r+0xc>
 8000c6c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000c6e:	f000 f91a 	bl	8000ea6 <__retarget_lock_release_recursive>
 8000c72:	e7d9      	b.n	8000c28 <_fflush_r+0xc>
 8000c74:	4b05      	ldr	r3, [pc, #20]	; (8000c8c <_fflush_r+0x70>)
 8000c76:	429c      	cmp	r4, r3
 8000c78:	d101      	bne.n	8000c7e <_fflush_r+0x62>
 8000c7a:	68ac      	ldr	r4, [r5, #8]
 8000c7c:	e7df      	b.n	8000c3e <_fflush_r+0x22>
 8000c7e:	4b04      	ldr	r3, [pc, #16]	; (8000c90 <_fflush_r+0x74>)
 8000c80:	429c      	cmp	r4, r3
 8000c82:	bf08      	it	eq
 8000c84:	68ec      	ldreq	r4, [r5, #12]
 8000c86:	e7da      	b.n	8000c3e <_fflush_r+0x22>
 8000c88:	08001b28 	.word	0x08001b28
 8000c8c:	08001b48 	.word	0x08001b48
 8000c90:	08001b08 	.word	0x08001b08

08000c94 <std>:
 8000c94:	2300      	movs	r3, #0
 8000c96:	b510      	push	{r4, lr}
 8000c98:	4604      	mov	r4, r0
 8000c9a:	e9c0 3300 	strd	r3, r3, [r0]
 8000c9e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ca2:	6083      	str	r3, [r0, #8]
 8000ca4:	8181      	strh	r1, [r0, #12]
 8000ca6:	6643      	str	r3, [r0, #100]	; 0x64
 8000ca8:	81c2      	strh	r2, [r0, #14]
 8000caa:	6183      	str	r3, [r0, #24]
 8000cac:	4619      	mov	r1, r3
 8000cae:	2208      	movs	r2, #8
 8000cb0:	305c      	adds	r0, #92	; 0x5c
 8000cb2:	f7ff fd6b 	bl	800078c <memset>
 8000cb6:	4b05      	ldr	r3, [pc, #20]	; (8000ccc <std+0x38>)
 8000cb8:	6263      	str	r3, [r4, #36]	; 0x24
 8000cba:	4b05      	ldr	r3, [pc, #20]	; (8000cd0 <std+0x3c>)
 8000cbc:	62a3      	str	r3, [r4, #40]	; 0x28
 8000cbe:	4b05      	ldr	r3, [pc, #20]	; (8000cd4 <std+0x40>)
 8000cc0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000cc2:	4b05      	ldr	r3, [pc, #20]	; (8000cd8 <std+0x44>)
 8000cc4:	6224      	str	r4, [r4, #32]
 8000cc6:	6323      	str	r3, [r4, #48]	; 0x30
 8000cc8:	bd10      	pop	{r4, pc}
 8000cca:	bf00      	nop
 8000ccc:	080017c9 	.word	0x080017c9
 8000cd0:	080017eb 	.word	0x080017eb
 8000cd4:	08001823 	.word	0x08001823
 8000cd8:	08001847 	.word	0x08001847

08000cdc <_cleanup_r>:
 8000cdc:	4901      	ldr	r1, [pc, #4]	; (8000ce4 <_cleanup_r+0x8>)
 8000cde:	f000 b8c1 	b.w	8000e64 <_fwalk_reent>
 8000ce2:	bf00      	nop
 8000ce4:	08000c1d 	.word	0x08000c1d

08000ce8 <__sfmoreglue>:
 8000ce8:	b570      	push	{r4, r5, r6, lr}
 8000cea:	2268      	movs	r2, #104	; 0x68
 8000cec:	1e4d      	subs	r5, r1, #1
 8000cee:	4355      	muls	r5, r2
 8000cf0:	460e      	mov	r6, r1
 8000cf2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000cf6:	f000 f9af 	bl	8001058 <_malloc_r>
 8000cfa:	4604      	mov	r4, r0
 8000cfc:	b140      	cbz	r0, 8000d10 <__sfmoreglue+0x28>
 8000cfe:	2100      	movs	r1, #0
 8000d00:	e9c0 1600 	strd	r1, r6, [r0]
 8000d04:	300c      	adds	r0, #12
 8000d06:	60a0      	str	r0, [r4, #8]
 8000d08:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000d0c:	f7ff fd3e 	bl	800078c <memset>
 8000d10:	4620      	mov	r0, r4
 8000d12:	bd70      	pop	{r4, r5, r6, pc}

08000d14 <__sfp_lock_acquire>:
 8000d14:	4801      	ldr	r0, [pc, #4]	; (8000d1c <__sfp_lock_acquire+0x8>)
 8000d16:	f000 b8c5 	b.w	8000ea4 <__retarget_lock_acquire_recursive>
 8000d1a:	bf00      	nop
 8000d1c:	200000cd 	.word	0x200000cd

08000d20 <__sfp_lock_release>:
 8000d20:	4801      	ldr	r0, [pc, #4]	; (8000d28 <__sfp_lock_release+0x8>)
 8000d22:	f000 b8c0 	b.w	8000ea6 <__retarget_lock_release_recursive>
 8000d26:	bf00      	nop
 8000d28:	200000cd 	.word	0x200000cd

08000d2c <__sinit_lock_acquire>:
 8000d2c:	4801      	ldr	r0, [pc, #4]	; (8000d34 <__sinit_lock_acquire+0x8>)
 8000d2e:	f000 b8b9 	b.w	8000ea4 <__retarget_lock_acquire_recursive>
 8000d32:	bf00      	nop
 8000d34:	200000ce 	.word	0x200000ce

08000d38 <__sinit_lock_release>:
 8000d38:	4801      	ldr	r0, [pc, #4]	; (8000d40 <__sinit_lock_release+0x8>)
 8000d3a:	f000 b8b4 	b.w	8000ea6 <__retarget_lock_release_recursive>
 8000d3e:	bf00      	nop
 8000d40:	200000ce 	.word	0x200000ce

08000d44 <__sinit>:
 8000d44:	b510      	push	{r4, lr}
 8000d46:	4604      	mov	r4, r0
 8000d48:	f7ff fff0 	bl	8000d2c <__sinit_lock_acquire>
 8000d4c:	69a3      	ldr	r3, [r4, #24]
 8000d4e:	b11b      	cbz	r3, 8000d58 <__sinit+0x14>
 8000d50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000d54:	f7ff bff0 	b.w	8000d38 <__sinit_lock_release>
 8000d58:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000d5c:	6523      	str	r3, [r4, #80]	; 0x50
 8000d5e:	4b13      	ldr	r3, [pc, #76]	; (8000dac <__sinit+0x68>)
 8000d60:	4a13      	ldr	r2, [pc, #76]	; (8000db0 <__sinit+0x6c>)
 8000d62:	681b      	ldr	r3, [r3, #0]
 8000d64:	62a2      	str	r2, [r4, #40]	; 0x28
 8000d66:	42a3      	cmp	r3, r4
 8000d68:	bf04      	itt	eq
 8000d6a:	2301      	moveq	r3, #1
 8000d6c:	61a3      	streq	r3, [r4, #24]
 8000d6e:	4620      	mov	r0, r4
 8000d70:	f000 f820 	bl	8000db4 <__sfp>
 8000d74:	6060      	str	r0, [r4, #4]
 8000d76:	4620      	mov	r0, r4
 8000d78:	f000 f81c 	bl	8000db4 <__sfp>
 8000d7c:	60a0      	str	r0, [r4, #8]
 8000d7e:	4620      	mov	r0, r4
 8000d80:	f000 f818 	bl	8000db4 <__sfp>
 8000d84:	2200      	movs	r2, #0
 8000d86:	60e0      	str	r0, [r4, #12]
 8000d88:	2104      	movs	r1, #4
 8000d8a:	6860      	ldr	r0, [r4, #4]
 8000d8c:	f7ff ff82 	bl	8000c94 <std>
 8000d90:	68a0      	ldr	r0, [r4, #8]
 8000d92:	2201      	movs	r2, #1
 8000d94:	2109      	movs	r1, #9
 8000d96:	f7ff ff7d 	bl	8000c94 <std>
 8000d9a:	68e0      	ldr	r0, [r4, #12]
 8000d9c:	2202      	movs	r2, #2
 8000d9e:	2112      	movs	r1, #18
 8000da0:	f7ff ff78 	bl	8000c94 <std>
 8000da4:	2301      	movs	r3, #1
 8000da6:	61a3      	str	r3, [r4, #24]
 8000da8:	e7d2      	b.n	8000d50 <__sinit+0xc>
 8000daa:	bf00      	nop
 8000dac:	08001a54 	.word	0x08001a54
 8000db0:	08000cdd 	.word	0x08000cdd

08000db4 <__sfp>:
 8000db4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000db6:	4607      	mov	r7, r0
 8000db8:	f7ff ffac 	bl	8000d14 <__sfp_lock_acquire>
 8000dbc:	4b1e      	ldr	r3, [pc, #120]	; (8000e38 <__sfp+0x84>)
 8000dbe:	681e      	ldr	r6, [r3, #0]
 8000dc0:	69b3      	ldr	r3, [r6, #24]
 8000dc2:	b913      	cbnz	r3, 8000dca <__sfp+0x16>
 8000dc4:	4630      	mov	r0, r6
 8000dc6:	f7ff ffbd 	bl	8000d44 <__sinit>
 8000dca:	3648      	adds	r6, #72	; 0x48
 8000dcc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000dd0:	3b01      	subs	r3, #1
 8000dd2:	d503      	bpl.n	8000ddc <__sfp+0x28>
 8000dd4:	6833      	ldr	r3, [r6, #0]
 8000dd6:	b30b      	cbz	r3, 8000e1c <__sfp+0x68>
 8000dd8:	6836      	ldr	r6, [r6, #0]
 8000dda:	e7f7      	b.n	8000dcc <__sfp+0x18>
 8000ddc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000de0:	b9d5      	cbnz	r5, 8000e18 <__sfp+0x64>
 8000de2:	4b16      	ldr	r3, [pc, #88]	; (8000e3c <__sfp+0x88>)
 8000de4:	60e3      	str	r3, [r4, #12]
 8000de6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000dea:	6665      	str	r5, [r4, #100]	; 0x64
 8000dec:	f000 f859 	bl	8000ea2 <__retarget_lock_init_recursive>
 8000df0:	f7ff ff96 	bl	8000d20 <__sfp_lock_release>
 8000df4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000df8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000dfc:	6025      	str	r5, [r4, #0]
 8000dfe:	61a5      	str	r5, [r4, #24]
 8000e00:	2208      	movs	r2, #8
 8000e02:	4629      	mov	r1, r5
 8000e04:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000e08:	f7ff fcc0 	bl	800078c <memset>
 8000e0c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000e10:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000e14:	4620      	mov	r0, r4
 8000e16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000e18:	3468      	adds	r4, #104	; 0x68
 8000e1a:	e7d9      	b.n	8000dd0 <__sfp+0x1c>
 8000e1c:	2104      	movs	r1, #4
 8000e1e:	4638      	mov	r0, r7
 8000e20:	f7ff ff62 	bl	8000ce8 <__sfmoreglue>
 8000e24:	4604      	mov	r4, r0
 8000e26:	6030      	str	r0, [r6, #0]
 8000e28:	2800      	cmp	r0, #0
 8000e2a:	d1d5      	bne.n	8000dd8 <__sfp+0x24>
 8000e2c:	f7ff ff78 	bl	8000d20 <__sfp_lock_release>
 8000e30:	230c      	movs	r3, #12
 8000e32:	603b      	str	r3, [r7, #0]
 8000e34:	e7ee      	b.n	8000e14 <__sfp+0x60>
 8000e36:	bf00      	nop
 8000e38:	08001a54 	.word	0x08001a54
 8000e3c:	ffff0001 	.word	0xffff0001

08000e40 <fiprintf>:
 8000e40:	b40e      	push	{r1, r2, r3}
 8000e42:	b503      	push	{r0, r1, lr}
 8000e44:	4601      	mov	r1, r0
 8000e46:	ab03      	add	r3, sp, #12
 8000e48:	4805      	ldr	r0, [pc, #20]	; (8000e60 <fiprintf+0x20>)
 8000e4a:	f853 2b04 	ldr.w	r2, [r3], #4
 8000e4e:	6800      	ldr	r0, [r0, #0]
 8000e50:	9301      	str	r3, [sp, #4]
 8000e52:	f000 f99d 	bl	8001190 <_vfiprintf_r>
 8000e56:	b002      	add	sp, #8
 8000e58:	f85d eb04 	ldr.w	lr, [sp], #4
 8000e5c:	b003      	add	sp, #12
 8000e5e:	4770      	bx	lr
 8000e60:	20000044 	.word	0x20000044

08000e64 <_fwalk_reent>:
 8000e64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000e68:	4606      	mov	r6, r0
 8000e6a:	4688      	mov	r8, r1
 8000e6c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000e70:	2700      	movs	r7, #0
 8000e72:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000e76:	f1b9 0901 	subs.w	r9, r9, #1
 8000e7a:	d505      	bpl.n	8000e88 <_fwalk_reent+0x24>
 8000e7c:	6824      	ldr	r4, [r4, #0]
 8000e7e:	2c00      	cmp	r4, #0
 8000e80:	d1f7      	bne.n	8000e72 <_fwalk_reent+0xe>
 8000e82:	4638      	mov	r0, r7
 8000e84:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000e88:	89ab      	ldrh	r3, [r5, #12]
 8000e8a:	2b01      	cmp	r3, #1
 8000e8c:	d907      	bls.n	8000e9e <_fwalk_reent+0x3a>
 8000e8e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000e92:	3301      	adds	r3, #1
 8000e94:	d003      	beq.n	8000e9e <_fwalk_reent+0x3a>
 8000e96:	4629      	mov	r1, r5
 8000e98:	4630      	mov	r0, r6
 8000e9a:	47c0      	blx	r8
 8000e9c:	4307      	orrs	r7, r0
 8000e9e:	3568      	adds	r5, #104	; 0x68
 8000ea0:	e7e9      	b.n	8000e76 <_fwalk_reent+0x12>

08000ea2 <__retarget_lock_init_recursive>:
 8000ea2:	4770      	bx	lr

08000ea4 <__retarget_lock_acquire_recursive>:
 8000ea4:	4770      	bx	lr

08000ea6 <__retarget_lock_release_recursive>:
 8000ea6:	4770      	bx	lr

08000ea8 <__swhatbuf_r>:
 8000ea8:	b570      	push	{r4, r5, r6, lr}
 8000eaa:	460e      	mov	r6, r1
 8000eac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eb0:	2900      	cmp	r1, #0
 8000eb2:	b096      	sub	sp, #88	; 0x58
 8000eb4:	4614      	mov	r4, r2
 8000eb6:	461d      	mov	r5, r3
 8000eb8:	da08      	bge.n	8000ecc <__swhatbuf_r+0x24>
 8000eba:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000ebe:	2200      	movs	r2, #0
 8000ec0:	602a      	str	r2, [r5, #0]
 8000ec2:	061a      	lsls	r2, r3, #24
 8000ec4:	d410      	bmi.n	8000ee8 <__swhatbuf_r+0x40>
 8000ec6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000eca:	e00e      	b.n	8000eea <__swhatbuf_r+0x42>
 8000ecc:	466a      	mov	r2, sp
 8000ece:	f000 fce9 	bl	80018a4 <_fstat_r>
 8000ed2:	2800      	cmp	r0, #0
 8000ed4:	dbf1      	blt.n	8000eba <__swhatbuf_r+0x12>
 8000ed6:	9a01      	ldr	r2, [sp, #4]
 8000ed8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000edc:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000ee0:	425a      	negs	r2, r3
 8000ee2:	415a      	adcs	r2, r3
 8000ee4:	602a      	str	r2, [r5, #0]
 8000ee6:	e7ee      	b.n	8000ec6 <__swhatbuf_r+0x1e>
 8000ee8:	2340      	movs	r3, #64	; 0x40
 8000eea:	2000      	movs	r0, #0
 8000eec:	6023      	str	r3, [r4, #0]
 8000eee:	b016      	add	sp, #88	; 0x58
 8000ef0:	bd70      	pop	{r4, r5, r6, pc}
	...

08000ef4 <__smakebuf_r>:
 8000ef4:	898b      	ldrh	r3, [r1, #12]
 8000ef6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000ef8:	079d      	lsls	r5, r3, #30
 8000efa:	4606      	mov	r6, r0
 8000efc:	460c      	mov	r4, r1
 8000efe:	d507      	bpl.n	8000f10 <__smakebuf_r+0x1c>
 8000f00:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000f04:	6023      	str	r3, [r4, #0]
 8000f06:	6123      	str	r3, [r4, #16]
 8000f08:	2301      	movs	r3, #1
 8000f0a:	6163      	str	r3, [r4, #20]
 8000f0c:	b002      	add	sp, #8
 8000f0e:	bd70      	pop	{r4, r5, r6, pc}
 8000f10:	ab01      	add	r3, sp, #4
 8000f12:	466a      	mov	r2, sp
 8000f14:	f7ff ffc8 	bl	8000ea8 <__swhatbuf_r>
 8000f18:	9900      	ldr	r1, [sp, #0]
 8000f1a:	4605      	mov	r5, r0
 8000f1c:	4630      	mov	r0, r6
 8000f1e:	f000 f89b 	bl	8001058 <_malloc_r>
 8000f22:	b948      	cbnz	r0, 8000f38 <__smakebuf_r+0x44>
 8000f24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f28:	059a      	lsls	r2, r3, #22
 8000f2a:	d4ef      	bmi.n	8000f0c <__smakebuf_r+0x18>
 8000f2c:	f023 0303 	bic.w	r3, r3, #3
 8000f30:	f043 0302 	orr.w	r3, r3, #2
 8000f34:	81a3      	strh	r3, [r4, #12]
 8000f36:	e7e3      	b.n	8000f00 <__smakebuf_r+0xc>
 8000f38:	4b0d      	ldr	r3, [pc, #52]	; (8000f70 <__smakebuf_r+0x7c>)
 8000f3a:	62b3      	str	r3, [r6, #40]	; 0x28
 8000f3c:	89a3      	ldrh	r3, [r4, #12]
 8000f3e:	6020      	str	r0, [r4, #0]
 8000f40:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f44:	81a3      	strh	r3, [r4, #12]
 8000f46:	9b00      	ldr	r3, [sp, #0]
 8000f48:	6163      	str	r3, [r4, #20]
 8000f4a:	9b01      	ldr	r3, [sp, #4]
 8000f4c:	6120      	str	r0, [r4, #16]
 8000f4e:	b15b      	cbz	r3, 8000f68 <__smakebuf_r+0x74>
 8000f50:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f54:	4630      	mov	r0, r6
 8000f56:	f000 fcb7 	bl	80018c8 <_isatty_r>
 8000f5a:	b128      	cbz	r0, 8000f68 <__smakebuf_r+0x74>
 8000f5c:	89a3      	ldrh	r3, [r4, #12]
 8000f5e:	f023 0303 	bic.w	r3, r3, #3
 8000f62:	f043 0301 	orr.w	r3, r3, #1
 8000f66:	81a3      	strh	r3, [r4, #12]
 8000f68:	89a0      	ldrh	r0, [r4, #12]
 8000f6a:	4305      	orrs	r5, r0
 8000f6c:	81a5      	strh	r5, [r4, #12]
 8000f6e:	e7cd      	b.n	8000f0c <__smakebuf_r+0x18>
 8000f70:	08000cdd 	.word	0x08000cdd

08000f74 <malloc>:
 8000f74:	4b02      	ldr	r3, [pc, #8]	; (8000f80 <malloc+0xc>)
 8000f76:	4601      	mov	r1, r0
 8000f78:	6818      	ldr	r0, [r3, #0]
 8000f7a:	f000 b86d 	b.w	8001058 <_malloc_r>
 8000f7e:	bf00      	nop
 8000f80:	20000044 	.word	0x20000044

08000f84 <_free_r>:
 8000f84:	b538      	push	{r3, r4, r5, lr}
 8000f86:	4605      	mov	r5, r0
 8000f88:	2900      	cmp	r1, #0
 8000f8a:	d041      	beq.n	8001010 <_free_r+0x8c>
 8000f8c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000f90:	1f0c      	subs	r4, r1, #4
 8000f92:	2b00      	cmp	r3, #0
 8000f94:	bfb8      	it	lt
 8000f96:	18e4      	addlt	r4, r4, r3
 8000f98:	f000 fcb8 	bl	800190c <__malloc_lock>
 8000f9c:	4a1d      	ldr	r2, [pc, #116]	; (8001014 <_free_r+0x90>)
 8000f9e:	6813      	ldr	r3, [r2, #0]
 8000fa0:	b933      	cbnz	r3, 8000fb0 <_free_r+0x2c>
 8000fa2:	6063      	str	r3, [r4, #4]
 8000fa4:	6014      	str	r4, [r2, #0]
 8000fa6:	4628      	mov	r0, r5
 8000fa8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000fac:	f000 bcb4 	b.w	8001918 <__malloc_unlock>
 8000fb0:	42a3      	cmp	r3, r4
 8000fb2:	d908      	bls.n	8000fc6 <_free_r+0x42>
 8000fb4:	6820      	ldr	r0, [r4, #0]
 8000fb6:	1821      	adds	r1, r4, r0
 8000fb8:	428b      	cmp	r3, r1
 8000fba:	bf01      	itttt	eq
 8000fbc:	6819      	ldreq	r1, [r3, #0]
 8000fbe:	685b      	ldreq	r3, [r3, #4]
 8000fc0:	1809      	addeq	r1, r1, r0
 8000fc2:	6021      	streq	r1, [r4, #0]
 8000fc4:	e7ed      	b.n	8000fa2 <_free_r+0x1e>
 8000fc6:	461a      	mov	r2, r3
 8000fc8:	685b      	ldr	r3, [r3, #4]
 8000fca:	b10b      	cbz	r3, 8000fd0 <_free_r+0x4c>
 8000fcc:	42a3      	cmp	r3, r4
 8000fce:	d9fa      	bls.n	8000fc6 <_free_r+0x42>
 8000fd0:	6811      	ldr	r1, [r2, #0]
 8000fd2:	1850      	adds	r0, r2, r1
 8000fd4:	42a0      	cmp	r0, r4
 8000fd6:	d10b      	bne.n	8000ff0 <_free_r+0x6c>
 8000fd8:	6820      	ldr	r0, [r4, #0]
 8000fda:	4401      	add	r1, r0
 8000fdc:	1850      	adds	r0, r2, r1
 8000fde:	4283      	cmp	r3, r0
 8000fe0:	6011      	str	r1, [r2, #0]
 8000fe2:	d1e0      	bne.n	8000fa6 <_free_r+0x22>
 8000fe4:	6818      	ldr	r0, [r3, #0]
 8000fe6:	685b      	ldr	r3, [r3, #4]
 8000fe8:	6053      	str	r3, [r2, #4]
 8000fea:	4401      	add	r1, r0
 8000fec:	6011      	str	r1, [r2, #0]
 8000fee:	e7da      	b.n	8000fa6 <_free_r+0x22>
 8000ff0:	d902      	bls.n	8000ff8 <_free_r+0x74>
 8000ff2:	230c      	movs	r3, #12
 8000ff4:	602b      	str	r3, [r5, #0]
 8000ff6:	e7d6      	b.n	8000fa6 <_free_r+0x22>
 8000ff8:	6820      	ldr	r0, [r4, #0]
 8000ffa:	1821      	adds	r1, r4, r0
 8000ffc:	428b      	cmp	r3, r1
 8000ffe:	bf04      	itt	eq
 8001000:	6819      	ldreq	r1, [r3, #0]
 8001002:	685b      	ldreq	r3, [r3, #4]
 8001004:	6063      	str	r3, [r4, #4]
 8001006:	bf04      	itt	eq
 8001008:	1809      	addeq	r1, r1, r0
 800100a:	6021      	streq	r1, [r4, #0]
 800100c:	6054      	str	r4, [r2, #4]
 800100e:	e7ca      	b.n	8000fa6 <_free_r+0x22>
 8001010:	bd38      	pop	{r3, r4, r5, pc}
 8001012:	bf00      	nop
 8001014:	200000d0 	.word	0x200000d0

08001018 <sbrk_aligned>:
 8001018:	b570      	push	{r4, r5, r6, lr}
 800101a:	4e0e      	ldr	r6, [pc, #56]	; (8001054 <sbrk_aligned+0x3c>)
 800101c:	460c      	mov	r4, r1
 800101e:	6831      	ldr	r1, [r6, #0]
 8001020:	4605      	mov	r5, r0
 8001022:	b911      	cbnz	r1, 800102a <sbrk_aligned+0x12>
 8001024:	f000 fbc0 	bl	80017a8 <_sbrk_r>
 8001028:	6030      	str	r0, [r6, #0]
 800102a:	4621      	mov	r1, r4
 800102c:	4628      	mov	r0, r5
 800102e:	f000 fbbb 	bl	80017a8 <_sbrk_r>
 8001032:	1c43      	adds	r3, r0, #1
 8001034:	d00a      	beq.n	800104c <sbrk_aligned+0x34>
 8001036:	1cc4      	adds	r4, r0, #3
 8001038:	f024 0403 	bic.w	r4, r4, #3
 800103c:	42a0      	cmp	r0, r4
 800103e:	d007      	beq.n	8001050 <sbrk_aligned+0x38>
 8001040:	1a21      	subs	r1, r4, r0
 8001042:	4628      	mov	r0, r5
 8001044:	f000 fbb0 	bl	80017a8 <_sbrk_r>
 8001048:	3001      	adds	r0, #1
 800104a:	d101      	bne.n	8001050 <sbrk_aligned+0x38>
 800104c:	f04f 34ff 	mov.w	r4, #4294967295
 8001050:	4620      	mov	r0, r4
 8001052:	bd70      	pop	{r4, r5, r6, pc}
 8001054:	200000d4 	.word	0x200000d4

08001058 <_malloc_r>:
 8001058:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800105c:	1ccd      	adds	r5, r1, #3
 800105e:	f025 0503 	bic.w	r5, r5, #3
 8001062:	3508      	adds	r5, #8
 8001064:	2d0c      	cmp	r5, #12
 8001066:	bf38      	it	cc
 8001068:	250c      	movcc	r5, #12
 800106a:	2d00      	cmp	r5, #0
 800106c:	4607      	mov	r7, r0
 800106e:	db01      	blt.n	8001074 <_malloc_r+0x1c>
 8001070:	42a9      	cmp	r1, r5
 8001072:	d905      	bls.n	8001080 <_malloc_r+0x28>
 8001074:	230c      	movs	r3, #12
 8001076:	603b      	str	r3, [r7, #0]
 8001078:	2600      	movs	r6, #0
 800107a:	4630      	mov	r0, r6
 800107c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001080:	4e2e      	ldr	r6, [pc, #184]	; (800113c <_malloc_r+0xe4>)
 8001082:	f000 fc43 	bl	800190c <__malloc_lock>
 8001086:	6833      	ldr	r3, [r6, #0]
 8001088:	461c      	mov	r4, r3
 800108a:	bb34      	cbnz	r4, 80010da <_malloc_r+0x82>
 800108c:	4629      	mov	r1, r5
 800108e:	4638      	mov	r0, r7
 8001090:	f7ff ffc2 	bl	8001018 <sbrk_aligned>
 8001094:	1c43      	adds	r3, r0, #1
 8001096:	4604      	mov	r4, r0
 8001098:	d14d      	bne.n	8001136 <_malloc_r+0xde>
 800109a:	6834      	ldr	r4, [r6, #0]
 800109c:	4626      	mov	r6, r4
 800109e:	2e00      	cmp	r6, #0
 80010a0:	d140      	bne.n	8001124 <_malloc_r+0xcc>
 80010a2:	6823      	ldr	r3, [r4, #0]
 80010a4:	4631      	mov	r1, r6
 80010a6:	4638      	mov	r0, r7
 80010a8:	eb04 0803 	add.w	r8, r4, r3
 80010ac:	f000 fb7c 	bl	80017a8 <_sbrk_r>
 80010b0:	4580      	cmp	r8, r0
 80010b2:	d13a      	bne.n	800112a <_malloc_r+0xd2>
 80010b4:	6821      	ldr	r1, [r4, #0]
 80010b6:	3503      	adds	r5, #3
 80010b8:	1a6d      	subs	r5, r5, r1
 80010ba:	f025 0503 	bic.w	r5, r5, #3
 80010be:	3508      	adds	r5, #8
 80010c0:	2d0c      	cmp	r5, #12
 80010c2:	bf38      	it	cc
 80010c4:	250c      	movcc	r5, #12
 80010c6:	4629      	mov	r1, r5
 80010c8:	4638      	mov	r0, r7
 80010ca:	f7ff ffa5 	bl	8001018 <sbrk_aligned>
 80010ce:	3001      	adds	r0, #1
 80010d0:	d02b      	beq.n	800112a <_malloc_r+0xd2>
 80010d2:	6823      	ldr	r3, [r4, #0]
 80010d4:	442b      	add	r3, r5
 80010d6:	6023      	str	r3, [r4, #0]
 80010d8:	e00e      	b.n	80010f8 <_malloc_r+0xa0>
 80010da:	6822      	ldr	r2, [r4, #0]
 80010dc:	1b52      	subs	r2, r2, r5
 80010de:	d41e      	bmi.n	800111e <_malloc_r+0xc6>
 80010e0:	2a0b      	cmp	r2, #11
 80010e2:	d916      	bls.n	8001112 <_malloc_r+0xba>
 80010e4:	1961      	adds	r1, r4, r5
 80010e6:	42a3      	cmp	r3, r4
 80010e8:	6025      	str	r5, [r4, #0]
 80010ea:	bf18      	it	ne
 80010ec:	6059      	strne	r1, [r3, #4]
 80010ee:	6863      	ldr	r3, [r4, #4]
 80010f0:	bf08      	it	eq
 80010f2:	6031      	streq	r1, [r6, #0]
 80010f4:	5162      	str	r2, [r4, r5]
 80010f6:	604b      	str	r3, [r1, #4]
 80010f8:	4638      	mov	r0, r7
 80010fa:	f104 060b 	add.w	r6, r4, #11
 80010fe:	f000 fc0b 	bl	8001918 <__malloc_unlock>
 8001102:	f026 0607 	bic.w	r6, r6, #7
 8001106:	1d23      	adds	r3, r4, #4
 8001108:	1af2      	subs	r2, r6, r3
 800110a:	d0b6      	beq.n	800107a <_malloc_r+0x22>
 800110c:	1b9b      	subs	r3, r3, r6
 800110e:	50a3      	str	r3, [r4, r2]
 8001110:	e7b3      	b.n	800107a <_malloc_r+0x22>
 8001112:	6862      	ldr	r2, [r4, #4]
 8001114:	42a3      	cmp	r3, r4
 8001116:	bf0c      	ite	eq
 8001118:	6032      	streq	r2, [r6, #0]
 800111a:	605a      	strne	r2, [r3, #4]
 800111c:	e7ec      	b.n	80010f8 <_malloc_r+0xa0>
 800111e:	4623      	mov	r3, r4
 8001120:	6864      	ldr	r4, [r4, #4]
 8001122:	e7b2      	b.n	800108a <_malloc_r+0x32>
 8001124:	4634      	mov	r4, r6
 8001126:	6876      	ldr	r6, [r6, #4]
 8001128:	e7b9      	b.n	800109e <_malloc_r+0x46>
 800112a:	230c      	movs	r3, #12
 800112c:	603b      	str	r3, [r7, #0]
 800112e:	4638      	mov	r0, r7
 8001130:	f000 fbf2 	bl	8001918 <__malloc_unlock>
 8001134:	e7a1      	b.n	800107a <_malloc_r+0x22>
 8001136:	6025      	str	r5, [r4, #0]
 8001138:	e7de      	b.n	80010f8 <_malloc_r+0xa0>
 800113a:	bf00      	nop
 800113c:	200000d0 	.word	0x200000d0

08001140 <__sfputc_r>:
 8001140:	6893      	ldr	r3, [r2, #8]
 8001142:	3b01      	subs	r3, #1
 8001144:	2b00      	cmp	r3, #0
 8001146:	b410      	push	{r4}
 8001148:	6093      	str	r3, [r2, #8]
 800114a:	da07      	bge.n	800115c <__sfputc_r+0x1c>
 800114c:	6994      	ldr	r4, [r2, #24]
 800114e:	42a3      	cmp	r3, r4
 8001150:	db01      	blt.n	8001156 <__sfputc_r+0x16>
 8001152:	290a      	cmp	r1, #10
 8001154:	d102      	bne.n	800115c <__sfputc_r+0x1c>
 8001156:	bc10      	pop	{r4}
 8001158:	f7ff bc00 	b.w	800095c <__swbuf_r>
 800115c:	6813      	ldr	r3, [r2, #0]
 800115e:	1c58      	adds	r0, r3, #1
 8001160:	6010      	str	r0, [r2, #0]
 8001162:	7019      	strb	r1, [r3, #0]
 8001164:	4608      	mov	r0, r1
 8001166:	bc10      	pop	{r4}
 8001168:	4770      	bx	lr

0800116a <__sfputs_r>:
 800116a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800116c:	4606      	mov	r6, r0
 800116e:	460f      	mov	r7, r1
 8001170:	4614      	mov	r4, r2
 8001172:	18d5      	adds	r5, r2, r3
 8001174:	42ac      	cmp	r4, r5
 8001176:	d101      	bne.n	800117c <__sfputs_r+0x12>
 8001178:	2000      	movs	r0, #0
 800117a:	e007      	b.n	800118c <__sfputs_r+0x22>
 800117c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001180:	463a      	mov	r2, r7
 8001182:	4630      	mov	r0, r6
 8001184:	f7ff ffdc 	bl	8001140 <__sfputc_r>
 8001188:	1c43      	adds	r3, r0, #1
 800118a:	d1f3      	bne.n	8001174 <__sfputs_r+0xa>
 800118c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001190 <_vfiprintf_r>:
 8001190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001194:	460d      	mov	r5, r1
 8001196:	b09d      	sub	sp, #116	; 0x74
 8001198:	4614      	mov	r4, r2
 800119a:	4698      	mov	r8, r3
 800119c:	4606      	mov	r6, r0
 800119e:	b118      	cbz	r0, 80011a8 <_vfiprintf_r+0x18>
 80011a0:	6983      	ldr	r3, [r0, #24]
 80011a2:	b90b      	cbnz	r3, 80011a8 <_vfiprintf_r+0x18>
 80011a4:	f7ff fdce 	bl	8000d44 <__sinit>
 80011a8:	4b89      	ldr	r3, [pc, #548]	; (80013d0 <_vfiprintf_r+0x240>)
 80011aa:	429d      	cmp	r5, r3
 80011ac:	d11b      	bne.n	80011e6 <_vfiprintf_r+0x56>
 80011ae:	6875      	ldr	r5, [r6, #4]
 80011b0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80011b2:	07d9      	lsls	r1, r3, #31
 80011b4:	d405      	bmi.n	80011c2 <_vfiprintf_r+0x32>
 80011b6:	89ab      	ldrh	r3, [r5, #12]
 80011b8:	059a      	lsls	r2, r3, #22
 80011ba:	d402      	bmi.n	80011c2 <_vfiprintf_r+0x32>
 80011bc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80011be:	f7ff fe71 	bl	8000ea4 <__retarget_lock_acquire_recursive>
 80011c2:	89ab      	ldrh	r3, [r5, #12]
 80011c4:	071b      	lsls	r3, r3, #28
 80011c6:	d501      	bpl.n	80011cc <_vfiprintf_r+0x3c>
 80011c8:	692b      	ldr	r3, [r5, #16]
 80011ca:	b9eb      	cbnz	r3, 8001208 <_vfiprintf_r+0x78>
 80011cc:	4629      	mov	r1, r5
 80011ce:	4630      	mov	r0, r6
 80011d0:	f7ff fc16 	bl	8000a00 <__swsetup_r>
 80011d4:	b1c0      	cbz	r0, 8001208 <_vfiprintf_r+0x78>
 80011d6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80011d8:	07dc      	lsls	r4, r3, #31
 80011da:	d50e      	bpl.n	80011fa <_vfiprintf_r+0x6a>
 80011dc:	f04f 30ff 	mov.w	r0, #4294967295
 80011e0:	b01d      	add	sp, #116	; 0x74
 80011e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80011e6:	4b7b      	ldr	r3, [pc, #492]	; (80013d4 <_vfiprintf_r+0x244>)
 80011e8:	429d      	cmp	r5, r3
 80011ea:	d101      	bne.n	80011f0 <_vfiprintf_r+0x60>
 80011ec:	68b5      	ldr	r5, [r6, #8]
 80011ee:	e7df      	b.n	80011b0 <_vfiprintf_r+0x20>
 80011f0:	4b79      	ldr	r3, [pc, #484]	; (80013d8 <_vfiprintf_r+0x248>)
 80011f2:	429d      	cmp	r5, r3
 80011f4:	bf08      	it	eq
 80011f6:	68f5      	ldreq	r5, [r6, #12]
 80011f8:	e7da      	b.n	80011b0 <_vfiprintf_r+0x20>
 80011fa:	89ab      	ldrh	r3, [r5, #12]
 80011fc:	0598      	lsls	r0, r3, #22
 80011fe:	d4ed      	bmi.n	80011dc <_vfiprintf_r+0x4c>
 8001200:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001202:	f7ff fe50 	bl	8000ea6 <__retarget_lock_release_recursive>
 8001206:	e7e9      	b.n	80011dc <_vfiprintf_r+0x4c>
 8001208:	2300      	movs	r3, #0
 800120a:	9309      	str	r3, [sp, #36]	; 0x24
 800120c:	2320      	movs	r3, #32
 800120e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001212:	f8cd 800c 	str.w	r8, [sp, #12]
 8001216:	2330      	movs	r3, #48	; 0x30
 8001218:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80013dc <_vfiprintf_r+0x24c>
 800121c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001220:	f04f 0901 	mov.w	r9, #1
 8001224:	4623      	mov	r3, r4
 8001226:	469a      	mov	sl, r3
 8001228:	f813 2b01 	ldrb.w	r2, [r3], #1
 800122c:	b10a      	cbz	r2, 8001232 <_vfiprintf_r+0xa2>
 800122e:	2a25      	cmp	r2, #37	; 0x25
 8001230:	d1f9      	bne.n	8001226 <_vfiprintf_r+0x96>
 8001232:	ebba 0b04 	subs.w	fp, sl, r4
 8001236:	d00b      	beq.n	8001250 <_vfiprintf_r+0xc0>
 8001238:	465b      	mov	r3, fp
 800123a:	4622      	mov	r2, r4
 800123c:	4629      	mov	r1, r5
 800123e:	4630      	mov	r0, r6
 8001240:	f7ff ff93 	bl	800116a <__sfputs_r>
 8001244:	3001      	adds	r0, #1
 8001246:	f000 80aa 	beq.w	800139e <_vfiprintf_r+0x20e>
 800124a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800124c:	445a      	add	r2, fp
 800124e:	9209      	str	r2, [sp, #36]	; 0x24
 8001250:	f89a 3000 	ldrb.w	r3, [sl]
 8001254:	2b00      	cmp	r3, #0
 8001256:	f000 80a2 	beq.w	800139e <_vfiprintf_r+0x20e>
 800125a:	2300      	movs	r3, #0
 800125c:	f04f 32ff 	mov.w	r2, #4294967295
 8001260:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001264:	f10a 0a01 	add.w	sl, sl, #1
 8001268:	9304      	str	r3, [sp, #16]
 800126a:	9307      	str	r3, [sp, #28]
 800126c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001270:	931a      	str	r3, [sp, #104]	; 0x68
 8001272:	4654      	mov	r4, sl
 8001274:	2205      	movs	r2, #5
 8001276:	f814 1b01 	ldrb.w	r1, [r4], #1
 800127a:	4858      	ldr	r0, [pc, #352]	; (80013dc <_vfiprintf_r+0x24c>)
 800127c:	f7fe ffc8 	bl	8000210 <memchr>
 8001280:	9a04      	ldr	r2, [sp, #16]
 8001282:	b9d8      	cbnz	r0, 80012bc <_vfiprintf_r+0x12c>
 8001284:	06d1      	lsls	r1, r2, #27
 8001286:	bf44      	itt	mi
 8001288:	2320      	movmi	r3, #32
 800128a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800128e:	0713      	lsls	r3, r2, #28
 8001290:	bf44      	itt	mi
 8001292:	232b      	movmi	r3, #43	; 0x2b
 8001294:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001298:	f89a 3000 	ldrb.w	r3, [sl]
 800129c:	2b2a      	cmp	r3, #42	; 0x2a
 800129e:	d015      	beq.n	80012cc <_vfiprintf_r+0x13c>
 80012a0:	9a07      	ldr	r2, [sp, #28]
 80012a2:	4654      	mov	r4, sl
 80012a4:	2000      	movs	r0, #0
 80012a6:	f04f 0c0a 	mov.w	ip, #10
 80012aa:	4621      	mov	r1, r4
 80012ac:	f811 3b01 	ldrb.w	r3, [r1], #1
 80012b0:	3b30      	subs	r3, #48	; 0x30
 80012b2:	2b09      	cmp	r3, #9
 80012b4:	d94e      	bls.n	8001354 <_vfiprintf_r+0x1c4>
 80012b6:	b1b0      	cbz	r0, 80012e6 <_vfiprintf_r+0x156>
 80012b8:	9207      	str	r2, [sp, #28]
 80012ba:	e014      	b.n	80012e6 <_vfiprintf_r+0x156>
 80012bc:	eba0 0308 	sub.w	r3, r0, r8
 80012c0:	fa09 f303 	lsl.w	r3, r9, r3
 80012c4:	4313      	orrs	r3, r2
 80012c6:	9304      	str	r3, [sp, #16]
 80012c8:	46a2      	mov	sl, r4
 80012ca:	e7d2      	b.n	8001272 <_vfiprintf_r+0xe2>
 80012cc:	9b03      	ldr	r3, [sp, #12]
 80012ce:	1d19      	adds	r1, r3, #4
 80012d0:	681b      	ldr	r3, [r3, #0]
 80012d2:	9103      	str	r1, [sp, #12]
 80012d4:	2b00      	cmp	r3, #0
 80012d6:	bfbb      	ittet	lt
 80012d8:	425b      	neglt	r3, r3
 80012da:	f042 0202 	orrlt.w	r2, r2, #2
 80012de:	9307      	strge	r3, [sp, #28]
 80012e0:	9307      	strlt	r3, [sp, #28]
 80012e2:	bfb8      	it	lt
 80012e4:	9204      	strlt	r2, [sp, #16]
 80012e6:	7823      	ldrb	r3, [r4, #0]
 80012e8:	2b2e      	cmp	r3, #46	; 0x2e
 80012ea:	d10c      	bne.n	8001306 <_vfiprintf_r+0x176>
 80012ec:	7863      	ldrb	r3, [r4, #1]
 80012ee:	2b2a      	cmp	r3, #42	; 0x2a
 80012f0:	d135      	bne.n	800135e <_vfiprintf_r+0x1ce>
 80012f2:	9b03      	ldr	r3, [sp, #12]
 80012f4:	1d1a      	adds	r2, r3, #4
 80012f6:	681b      	ldr	r3, [r3, #0]
 80012f8:	9203      	str	r2, [sp, #12]
 80012fa:	2b00      	cmp	r3, #0
 80012fc:	bfb8      	it	lt
 80012fe:	f04f 33ff 	movlt.w	r3, #4294967295
 8001302:	3402      	adds	r4, #2
 8001304:	9305      	str	r3, [sp, #20]
 8001306:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 80013e0 <_vfiprintf_r+0x250>
 800130a:	7821      	ldrb	r1, [r4, #0]
 800130c:	2203      	movs	r2, #3
 800130e:	4650      	mov	r0, sl
 8001310:	f7fe ff7e 	bl	8000210 <memchr>
 8001314:	b140      	cbz	r0, 8001328 <_vfiprintf_r+0x198>
 8001316:	2340      	movs	r3, #64	; 0x40
 8001318:	eba0 000a 	sub.w	r0, r0, sl
 800131c:	fa03 f000 	lsl.w	r0, r3, r0
 8001320:	9b04      	ldr	r3, [sp, #16]
 8001322:	4303      	orrs	r3, r0
 8001324:	3401      	adds	r4, #1
 8001326:	9304      	str	r3, [sp, #16]
 8001328:	f814 1b01 	ldrb.w	r1, [r4], #1
 800132c:	482d      	ldr	r0, [pc, #180]	; (80013e4 <_vfiprintf_r+0x254>)
 800132e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001332:	2206      	movs	r2, #6
 8001334:	f7fe ff6c 	bl	8000210 <memchr>
 8001338:	2800      	cmp	r0, #0
 800133a:	d03f      	beq.n	80013bc <_vfiprintf_r+0x22c>
 800133c:	4b2a      	ldr	r3, [pc, #168]	; (80013e8 <_vfiprintf_r+0x258>)
 800133e:	bb1b      	cbnz	r3, 8001388 <_vfiprintf_r+0x1f8>
 8001340:	9b03      	ldr	r3, [sp, #12]
 8001342:	3307      	adds	r3, #7
 8001344:	f023 0307 	bic.w	r3, r3, #7
 8001348:	3308      	adds	r3, #8
 800134a:	9303      	str	r3, [sp, #12]
 800134c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800134e:	443b      	add	r3, r7
 8001350:	9309      	str	r3, [sp, #36]	; 0x24
 8001352:	e767      	b.n	8001224 <_vfiprintf_r+0x94>
 8001354:	fb0c 3202 	mla	r2, ip, r2, r3
 8001358:	460c      	mov	r4, r1
 800135a:	2001      	movs	r0, #1
 800135c:	e7a5      	b.n	80012aa <_vfiprintf_r+0x11a>
 800135e:	2300      	movs	r3, #0
 8001360:	3401      	adds	r4, #1
 8001362:	9305      	str	r3, [sp, #20]
 8001364:	4619      	mov	r1, r3
 8001366:	f04f 0c0a 	mov.w	ip, #10
 800136a:	4620      	mov	r0, r4
 800136c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001370:	3a30      	subs	r2, #48	; 0x30
 8001372:	2a09      	cmp	r2, #9
 8001374:	d903      	bls.n	800137e <_vfiprintf_r+0x1ee>
 8001376:	2b00      	cmp	r3, #0
 8001378:	d0c5      	beq.n	8001306 <_vfiprintf_r+0x176>
 800137a:	9105      	str	r1, [sp, #20]
 800137c:	e7c3      	b.n	8001306 <_vfiprintf_r+0x176>
 800137e:	fb0c 2101 	mla	r1, ip, r1, r2
 8001382:	4604      	mov	r4, r0
 8001384:	2301      	movs	r3, #1
 8001386:	e7f0      	b.n	800136a <_vfiprintf_r+0x1da>
 8001388:	ab03      	add	r3, sp, #12
 800138a:	9300      	str	r3, [sp, #0]
 800138c:	462a      	mov	r2, r5
 800138e:	4b17      	ldr	r3, [pc, #92]	; (80013ec <_vfiprintf_r+0x25c>)
 8001390:	a904      	add	r1, sp, #16
 8001392:	4630      	mov	r0, r6
 8001394:	f3af 8000 	nop.w
 8001398:	4607      	mov	r7, r0
 800139a:	1c78      	adds	r0, r7, #1
 800139c:	d1d6      	bne.n	800134c <_vfiprintf_r+0x1bc>
 800139e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80013a0:	07d9      	lsls	r1, r3, #31
 80013a2:	d405      	bmi.n	80013b0 <_vfiprintf_r+0x220>
 80013a4:	89ab      	ldrh	r3, [r5, #12]
 80013a6:	059a      	lsls	r2, r3, #22
 80013a8:	d402      	bmi.n	80013b0 <_vfiprintf_r+0x220>
 80013aa:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80013ac:	f7ff fd7b 	bl	8000ea6 <__retarget_lock_release_recursive>
 80013b0:	89ab      	ldrh	r3, [r5, #12]
 80013b2:	065b      	lsls	r3, r3, #25
 80013b4:	f53f af12 	bmi.w	80011dc <_vfiprintf_r+0x4c>
 80013b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80013ba:	e711      	b.n	80011e0 <_vfiprintf_r+0x50>
 80013bc:	ab03      	add	r3, sp, #12
 80013be:	9300      	str	r3, [sp, #0]
 80013c0:	462a      	mov	r2, r5
 80013c2:	4b0a      	ldr	r3, [pc, #40]	; (80013ec <_vfiprintf_r+0x25c>)
 80013c4:	a904      	add	r1, sp, #16
 80013c6:	4630      	mov	r0, r6
 80013c8:	f000 f880 	bl	80014cc <_printf_i>
 80013cc:	e7e4      	b.n	8001398 <_vfiprintf_r+0x208>
 80013ce:	bf00      	nop
 80013d0:	08001b28 	.word	0x08001b28
 80013d4:	08001b48 	.word	0x08001b48
 80013d8:	08001b08 	.word	0x08001b08
 80013dc:	08001b68 	.word	0x08001b68
 80013e0:	08001b6e 	.word	0x08001b6e
 80013e4:	08001b72 	.word	0x08001b72
 80013e8:	00000000 	.word	0x00000000
 80013ec:	0800116b 	.word	0x0800116b

080013f0 <_printf_common>:
 80013f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80013f4:	4616      	mov	r6, r2
 80013f6:	4699      	mov	r9, r3
 80013f8:	688a      	ldr	r2, [r1, #8]
 80013fa:	690b      	ldr	r3, [r1, #16]
 80013fc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001400:	4293      	cmp	r3, r2
 8001402:	bfb8      	it	lt
 8001404:	4613      	movlt	r3, r2
 8001406:	6033      	str	r3, [r6, #0]
 8001408:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800140c:	4607      	mov	r7, r0
 800140e:	460c      	mov	r4, r1
 8001410:	b10a      	cbz	r2, 8001416 <_printf_common+0x26>
 8001412:	3301      	adds	r3, #1
 8001414:	6033      	str	r3, [r6, #0]
 8001416:	6823      	ldr	r3, [r4, #0]
 8001418:	0699      	lsls	r1, r3, #26
 800141a:	bf42      	ittt	mi
 800141c:	6833      	ldrmi	r3, [r6, #0]
 800141e:	3302      	addmi	r3, #2
 8001420:	6033      	strmi	r3, [r6, #0]
 8001422:	6825      	ldr	r5, [r4, #0]
 8001424:	f015 0506 	ands.w	r5, r5, #6
 8001428:	d106      	bne.n	8001438 <_printf_common+0x48>
 800142a:	f104 0a19 	add.w	sl, r4, #25
 800142e:	68e3      	ldr	r3, [r4, #12]
 8001430:	6832      	ldr	r2, [r6, #0]
 8001432:	1a9b      	subs	r3, r3, r2
 8001434:	42ab      	cmp	r3, r5
 8001436:	dc26      	bgt.n	8001486 <_printf_common+0x96>
 8001438:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800143c:	1e13      	subs	r3, r2, #0
 800143e:	6822      	ldr	r2, [r4, #0]
 8001440:	bf18      	it	ne
 8001442:	2301      	movne	r3, #1
 8001444:	0692      	lsls	r2, r2, #26
 8001446:	d42b      	bmi.n	80014a0 <_printf_common+0xb0>
 8001448:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800144c:	4649      	mov	r1, r9
 800144e:	4638      	mov	r0, r7
 8001450:	47c0      	blx	r8
 8001452:	3001      	adds	r0, #1
 8001454:	d01e      	beq.n	8001494 <_printf_common+0xa4>
 8001456:	6823      	ldr	r3, [r4, #0]
 8001458:	68e5      	ldr	r5, [r4, #12]
 800145a:	6832      	ldr	r2, [r6, #0]
 800145c:	f003 0306 	and.w	r3, r3, #6
 8001460:	2b04      	cmp	r3, #4
 8001462:	bf08      	it	eq
 8001464:	1aad      	subeq	r5, r5, r2
 8001466:	68a3      	ldr	r3, [r4, #8]
 8001468:	6922      	ldr	r2, [r4, #16]
 800146a:	bf0c      	ite	eq
 800146c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001470:	2500      	movne	r5, #0
 8001472:	4293      	cmp	r3, r2
 8001474:	bfc4      	itt	gt
 8001476:	1a9b      	subgt	r3, r3, r2
 8001478:	18ed      	addgt	r5, r5, r3
 800147a:	2600      	movs	r6, #0
 800147c:	341a      	adds	r4, #26
 800147e:	42b5      	cmp	r5, r6
 8001480:	d11a      	bne.n	80014b8 <_printf_common+0xc8>
 8001482:	2000      	movs	r0, #0
 8001484:	e008      	b.n	8001498 <_printf_common+0xa8>
 8001486:	2301      	movs	r3, #1
 8001488:	4652      	mov	r2, sl
 800148a:	4649      	mov	r1, r9
 800148c:	4638      	mov	r0, r7
 800148e:	47c0      	blx	r8
 8001490:	3001      	adds	r0, #1
 8001492:	d103      	bne.n	800149c <_printf_common+0xac>
 8001494:	f04f 30ff 	mov.w	r0, #4294967295
 8001498:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800149c:	3501      	adds	r5, #1
 800149e:	e7c6      	b.n	800142e <_printf_common+0x3e>
 80014a0:	18e1      	adds	r1, r4, r3
 80014a2:	1c5a      	adds	r2, r3, #1
 80014a4:	2030      	movs	r0, #48	; 0x30
 80014a6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80014aa:	4422      	add	r2, r4
 80014ac:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80014b0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80014b4:	3302      	adds	r3, #2
 80014b6:	e7c7      	b.n	8001448 <_printf_common+0x58>
 80014b8:	2301      	movs	r3, #1
 80014ba:	4622      	mov	r2, r4
 80014bc:	4649      	mov	r1, r9
 80014be:	4638      	mov	r0, r7
 80014c0:	47c0      	blx	r8
 80014c2:	3001      	adds	r0, #1
 80014c4:	d0e6      	beq.n	8001494 <_printf_common+0xa4>
 80014c6:	3601      	adds	r6, #1
 80014c8:	e7d9      	b.n	800147e <_printf_common+0x8e>
	...

080014cc <_printf_i>:
 80014cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80014d0:	7e0f      	ldrb	r7, [r1, #24]
 80014d2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80014d4:	2f78      	cmp	r7, #120	; 0x78
 80014d6:	4691      	mov	r9, r2
 80014d8:	4680      	mov	r8, r0
 80014da:	460c      	mov	r4, r1
 80014dc:	469a      	mov	sl, r3
 80014de:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80014e2:	d807      	bhi.n	80014f4 <_printf_i+0x28>
 80014e4:	2f62      	cmp	r7, #98	; 0x62
 80014e6:	d80a      	bhi.n	80014fe <_printf_i+0x32>
 80014e8:	2f00      	cmp	r7, #0
 80014ea:	f000 80d8 	beq.w	800169e <_printf_i+0x1d2>
 80014ee:	2f58      	cmp	r7, #88	; 0x58
 80014f0:	f000 80a3 	beq.w	800163a <_printf_i+0x16e>
 80014f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80014f8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80014fc:	e03a      	b.n	8001574 <_printf_i+0xa8>
 80014fe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001502:	2b15      	cmp	r3, #21
 8001504:	d8f6      	bhi.n	80014f4 <_printf_i+0x28>
 8001506:	a101      	add	r1, pc, #4	; (adr r1, 800150c <_printf_i+0x40>)
 8001508:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800150c:	08001565 	.word	0x08001565
 8001510:	08001579 	.word	0x08001579
 8001514:	080014f5 	.word	0x080014f5
 8001518:	080014f5 	.word	0x080014f5
 800151c:	080014f5 	.word	0x080014f5
 8001520:	080014f5 	.word	0x080014f5
 8001524:	08001579 	.word	0x08001579
 8001528:	080014f5 	.word	0x080014f5
 800152c:	080014f5 	.word	0x080014f5
 8001530:	080014f5 	.word	0x080014f5
 8001534:	080014f5 	.word	0x080014f5
 8001538:	08001685 	.word	0x08001685
 800153c:	080015a9 	.word	0x080015a9
 8001540:	08001667 	.word	0x08001667
 8001544:	080014f5 	.word	0x080014f5
 8001548:	080014f5 	.word	0x080014f5
 800154c:	080016a7 	.word	0x080016a7
 8001550:	080014f5 	.word	0x080014f5
 8001554:	080015a9 	.word	0x080015a9
 8001558:	080014f5 	.word	0x080014f5
 800155c:	080014f5 	.word	0x080014f5
 8001560:	0800166f 	.word	0x0800166f
 8001564:	682b      	ldr	r3, [r5, #0]
 8001566:	1d1a      	adds	r2, r3, #4
 8001568:	681b      	ldr	r3, [r3, #0]
 800156a:	602a      	str	r2, [r5, #0]
 800156c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001570:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001574:	2301      	movs	r3, #1
 8001576:	e0a3      	b.n	80016c0 <_printf_i+0x1f4>
 8001578:	6820      	ldr	r0, [r4, #0]
 800157a:	6829      	ldr	r1, [r5, #0]
 800157c:	0606      	lsls	r6, r0, #24
 800157e:	f101 0304 	add.w	r3, r1, #4
 8001582:	d50a      	bpl.n	800159a <_printf_i+0xce>
 8001584:	680e      	ldr	r6, [r1, #0]
 8001586:	602b      	str	r3, [r5, #0]
 8001588:	2e00      	cmp	r6, #0
 800158a:	da03      	bge.n	8001594 <_printf_i+0xc8>
 800158c:	232d      	movs	r3, #45	; 0x2d
 800158e:	4276      	negs	r6, r6
 8001590:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001594:	485e      	ldr	r0, [pc, #376]	; (8001710 <_printf_i+0x244>)
 8001596:	230a      	movs	r3, #10
 8001598:	e019      	b.n	80015ce <_printf_i+0x102>
 800159a:	680e      	ldr	r6, [r1, #0]
 800159c:	602b      	str	r3, [r5, #0]
 800159e:	f010 0f40 	tst.w	r0, #64	; 0x40
 80015a2:	bf18      	it	ne
 80015a4:	b236      	sxthne	r6, r6
 80015a6:	e7ef      	b.n	8001588 <_printf_i+0xbc>
 80015a8:	682b      	ldr	r3, [r5, #0]
 80015aa:	6820      	ldr	r0, [r4, #0]
 80015ac:	1d19      	adds	r1, r3, #4
 80015ae:	6029      	str	r1, [r5, #0]
 80015b0:	0601      	lsls	r1, r0, #24
 80015b2:	d501      	bpl.n	80015b8 <_printf_i+0xec>
 80015b4:	681e      	ldr	r6, [r3, #0]
 80015b6:	e002      	b.n	80015be <_printf_i+0xf2>
 80015b8:	0646      	lsls	r6, r0, #25
 80015ba:	d5fb      	bpl.n	80015b4 <_printf_i+0xe8>
 80015bc:	881e      	ldrh	r6, [r3, #0]
 80015be:	4854      	ldr	r0, [pc, #336]	; (8001710 <_printf_i+0x244>)
 80015c0:	2f6f      	cmp	r7, #111	; 0x6f
 80015c2:	bf0c      	ite	eq
 80015c4:	2308      	moveq	r3, #8
 80015c6:	230a      	movne	r3, #10
 80015c8:	2100      	movs	r1, #0
 80015ca:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80015ce:	6865      	ldr	r5, [r4, #4]
 80015d0:	60a5      	str	r5, [r4, #8]
 80015d2:	2d00      	cmp	r5, #0
 80015d4:	bfa2      	ittt	ge
 80015d6:	6821      	ldrge	r1, [r4, #0]
 80015d8:	f021 0104 	bicge.w	r1, r1, #4
 80015dc:	6021      	strge	r1, [r4, #0]
 80015de:	b90e      	cbnz	r6, 80015e4 <_printf_i+0x118>
 80015e0:	2d00      	cmp	r5, #0
 80015e2:	d04d      	beq.n	8001680 <_printf_i+0x1b4>
 80015e4:	4615      	mov	r5, r2
 80015e6:	fbb6 f1f3 	udiv	r1, r6, r3
 80015ea:	fb03 6711 	mls	r7, r3, r1, r6
 80015ee:	5dc7      	ldrb	r7, [r0, r7]
 80015f0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80015f4:	4637      	mov	r7, r6
 80015f6:	42bb      	cmp	r3, r7
 80015f8:	460e      	mov	r6, r1
 80015fa:	d9f4      	bls.n	80015e6 <_printf_i+0x11a>
 80015fc:	2b08      	cmp	r3, #8
 80015fe:	d10b      	bne.n	8001618 <_printf_i+0x14c>
 8001600:	6823      	ldr	r3, [r4, #0]
 8001602:	07de      	lsls	r6, r3, #31
 8001604:	d508      	bpl.n	8001618 <_printf_i+0x14c>
 8001606:	6923      	ldr	r3, [r4, #16]
 8001608:	6861      	ldr	r1, [r4, #4]
 800160a:	4299      	cmp	r1, r3
 800160c:	bfde      	ittt	le
 800160e:	2330      	movle	r3, #48	; 0x30
 8001610:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001614:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001618:	1b52      	subs	r2, r2, r5
 800161a:	6122      	str	r2, [r4, #16]
 800161c:	f8cd a000 	str.w	sl, [sp]
 8001620:	464b      	mov	r3, r9
 8001622:	aa03      	add	r2, sp, #12
 8001624:	4621      	mov	r1, r4
 8001626:	4640      	mov	r0, r8
 8001628:	f7ff fee2 	bl	80013f0 <_printf_common>
 800162c:	3001      	adds	r0, #1
 800162e:	d14c      	bne.n	80016ca <_printf_i+0x1fe>
 8001630:	f04f 30ff 	mov.w	r0, #4294967295
 8001634:	b004      	add	sp, #16
 8001636:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800163a:	4835      	ldr	r0, [pc, #212]	; (8001710 <_printf_i+0x244>)
 800163c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001640:	6829      	ldr	r1, [r5, #0]
 8001642:	6823      	ldr	r3, [r4, #0]
 8001644:	f851 6b04 	ldr.w	r6, [r1], #4
 8001648:	6029      	str	r1, [r5, #0]
 800164a:	061d      	lsls	r5, r3, #24
 800164c:	d514      	bpl.n	8001678 <_printf_i+0x1ac>
 800164e:	07df      	lsls	r7, r3, #31
 8001650:	bf44      	itt	mi
 8001652:	f043 0320 	orrmi.w	r3, r3, #32
 8001656:	6023      	strmi	r3, [r4, #0]
 8001658:	b91e      	cbnz	r6, 8001662 <_printf_i+0x196>
 800165a:	6823      	ldr	r3, [r4, #0]
 800165c:	f023 0320 	bic.w	r3, r3, #32
 8001660:	6023      	str	r3, [r4, #0]
 8001662:	2310      	movs	r3, #16
 8001664:	e7b0      	b.n	80015c8 <_printf_i+0xfc>
 8001666:	6823      	ldr	r3, [r4, #0]
 8001668:	f043 0320 	orr.w	r3, r3, #32
 800166c:	6023      	str	r3, [r4, #0]
 800166e:	2378      	movs	r3, #120	; 0x78
 8001670:	4828      	ldr	r0, [pc, #160]	; (8001714 <_printf_i+0x248>)
 8001672:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001676:	e7e3      	b.n	8001640 <_printf_i+0x174>
 8001678:	0659      	lsls	r1, r3, #25
 800167a:	bf48      	it	mi
 800167c:	b2b6      	uxthmi	r6, r6
 800167e:	e7e6      	b.n	800164e <_printf_i+0x182>
 8001680:	4615      	mov	r5, r2
 8001682:	e7bb      	b.n	80015fc <_printf_i+0x130>
 8001684:	682b      	ldr	r3, [r5, #0]
 8001686:	6826      	ldr	r6, [r4, #0]
 8001688:	6961      	ldr	r1, [r4, #20]
 800168a:	1d18      	adds	r0, r3, #4
 800168c:	6028      	str	r0, [r5, #0]
 800168e:	0635      	lsls	r5, r6, #24
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	d501      	bpl.n	8001698 <_printf_i+0x1cc>
 8001694:	6019      	str	r1, [r3, #0]
 8001696:	e002      	b.n	800169e <_printf_i+0x1d2>
 8001698:	0670      	lsls	r0, r6, #25
 800169a:	d5fb      	bpl.n	8001694 <_printf_i+0x1c8>
 800169c:	8019      	strh	r1, [r3, #0]
 800169e:	2300      	movs	r3, #0
 80016a0:	6123      	str	r3, [r4, #16]
 80016a2:	4615      	mov	r5, r2
 80016a4:	e7ba      	b.n	800161c <_printf_i+0x150>
 80016a6:	682b      	ldr	r3, [r5, #0]
 80016a8:	1d1a      	adds	r2, r3, #4
 80016aa:	602a      	str	r2, [r5, #0]
 80016ac:	681d      	ldr	r5, [r3, #0]
 80016ae:	6862      	ldr	r2, [r4, #4]
 80016b0:	2100      	movs	r1, #0
 80016b2:	4628      	mov	r0, r5
 80016b4:	f7fe fdac 	bl	8000210 <memchr>
 80016b8:	b108      	cbz	r0, 80016be <_printf_i+0x1f2>
 80016ba:	1b40      	subs	r0, r0, r5
 80016bc:	6060      	str	r0, [r4, #4]
 80016be:	6863      	ldr	r3, [r4, #4]
 80016c0:	6123      	str	r3, [r4, #16]
 80016c2:	2300      	movs	r3, #0
 80016c4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80016c8:	e7a8      	b.n	800161c <_printf_i+0x150>
 80016ca:	6923      	ldr	r3, [r4, #16]
 80016cc:	462a      	mov	r2, r5
 80016ce:	4649      	mov	r1, r9
 80016d0:	4640      	mov	r0, r8
 80016d2:	47d0      	blx	sl
 80016d4:	3001      	adds	r0, #1
 80016d6:	d0ab      	beq.n	8001630 <_printf_i+0x164>
 80016d8:	6823      	ldr	r3, [r4, #0]
 80016da:	079b      	lsls	r3, r3, #30
 80016dc:	d413      	bmi.n	8001706 <_printf_i+0x23a>
 80016de:	68e0      	ldr	r0, [r4, #12]
 80016e0:	9b03      	ldr	r3, [sp, #12]
 80016e2:	4298      	cmp	r0, r3
 80016e4:	bfb8      	it	lt
 80016e6:	4618      	movlt	r0, r3
 80016e8:	e7a4      	b.n	8001634 <_printf_i+0x168>
 80016ea:	2301      	movs	r3, #1
 80016ec:	4632      	mov	r2, r6
 80016ee:	4649      	mov	r1, r9
 80016f0:	4640      	mov	r0, r8
 80016f2:	47d0      	blx	sl
 80016f4:	3001      	adds	r0, #1
 80016f6:	d09b      	beq.n	8001630 <_printf_i+0x164>
 80016f8:	3501      	adds	r5, #1
 80016fa:	68e3      	ldr	r3, [r4, #12]
 80016fc:	9903      	ldr	r1, [sp, #12]
 80016fe:	1a5b      	subs	r3, r3, r1
 8001700:	42ab      	cmp	r3, r5
 8001702:	dcf2      	bgt.n	80016ea <_printf_i+0x21e>
 8001704:	e7eb      	b.n	80016de <_printf_i+0x212>
 8001706:	2500      	movs	r5, #0
 8001708:	f104 0619 	add.w	r6, r4, #25
 800170c:	e7f5      	b.n	80016fa <_printf_i+0x22e>
 800170e:	bf00      	nop
 8001710:	08001b79 	.word	0x08001b79
 8001714:	08001b8a 	.word	0x08001b8a

08001718 <_putc_r>:
 8001718:	b570      	push	{r4, r5, r6, lr}
 800171a:	460d      	mov	r5, r1
 800171c:	4614      	mov	r4, r2
 800171e:	4606      	mov	r6, r0
 8001720:	b118      	cbz	r0, 800172a <_putc_r+0x12>
 8001722:	6983      	ldr	r3, [r0, #24]
 8001724:	b90b      	cbnz	r3, 800172a <_putc_r+0x12>
 8001726:	f7ff fb0d 	bl	8000d44 <__sinit>
 800172a:	4b1c      	ldr	r3, [pc, #112]	; (800179c <_putc_r+0x84>)
 800172c:	429c      	cmp	r4, r3
 800172e:	d124      	bne.n	800177a <_putc_r+0x62>
 8001730:	6874      	ldr	r4, [r6, #4]
 8001732:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001734:	07d8      	lsls	r0, r3, #31
 8001736:	d405      	bmi.n	8001744 <_putc_r+0x2c>
 8001738:	89a3      	ldrh	r3, [r4, #12]
 800173a:	0599      	lsls	r1, r3, #22
 800173c:	d402      	bmi.n	8001744 <_putc_r+0x2c>
 800173e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001740:	f7ff fbb0 	bl	8000ea4 <__retarget_lock_acquire_recursive>
 8001744:	68a3      	ldr	r3, [r4, #8]
 8001746:	3b01      	subs	r3, #1
 8001748:	2b00      	cmp	r3, #0
 800174a:	60a3      	str	r3, [r4, #8]
 800174c:	da05      	bge.n	800175a <_putc_r+0x42>
 800174e:	69a2      	ldr	r2, [r4, #24]
 8001750:	4293      	cmp	r3, r2
 8001752:	db1c      	blt.n	800178e <_putc_r+0x76>
 8001754:	b2eb      	uxtb	r3, r5
 8001756:	2b0a      	cmp	r3, #10
 8001758:	d019      	beq.n	800178e <_putc_r+0x76>
 800175a:	6823      	ldr	r3, [r4, #0]
 800175c:	1c5a      	adds	r2, r3, #1
 800175e:	6022      	str	r2, [r4, #0]
 8001760:	701d      	strb	r5, [r3, #0]
 8001762:	b2ed      	uxtb	r5, r5
 8001764:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001766:	07da      	lsls	r2, r3, #31
 8001768:	d405      	bmi.n	8001776 <_putc_r+0x5e>
 800176a:	89a3      	ldrh	r3, [r4, #12]
 800176c:	059b      	lsls	r3, r3, #22
 800176e:	d402      	bmi.n	8001776 <_putc_r+0x5e>
 8001770:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001772:	f7ff fb98 	bl	8000ea6 <__retarget_lock_release_recursive>
 8001776:	4628      	mov	r0, r5
 8001778:	bd70      	pop	{r4, r5, r6, pc}
 800177a:	4b09      	ldr	r3, [pc, #36]	; (80017a0 <_putc_r+0x88>)
 800177c:	429c      	cmp	r4, r3
 800177e:	d101      	bne.n	8001784 <_putc_r+0x6c>
 8001780:	68b4      	ldr	r4, [r6, #8]
 8001782:	e7d6      	b.n	8001732 <_putc_r+0x1a>
 8001784:	4b07      	ldr	r3, [pc, #28]	; (80017a4 <_putc_r+0x8c>)
 8001786:	429c      	cmp	r4, r3
 8001788:	bf08      	it	eq
 800178a:	68f4      	ldreq	r4, [r6, #12]
 800178c:	e7d1      	b.n	8001732 <_putc_r+0x1a>
 800178e:	4629      	mov	r1, r5
 8001790:	4622      	mov	r2, r4
 8001792:	4630      	mov	r0, r6
 8001794:	f7ff f8e2 	bl	800095c <__swbuf_r>
 8001798:	4605      	mov	r5, r0
 800179a:	e7e3      	b.n	8001764 <_putc_r+0x4c>
 800179c:	08001b28 	.word	0x08001b28
 80017a0:	08001b48 	.word	0x08001b48
 80017a4:	08001b08 	.word	0x08001b08

080017a8 <_sbrk_r>:
 80017a8:	b538      	push	{r3, r4, r5, lr}
 80017aa:	4d06      	ldr	r5, [pc, #24]	; (80017c4 <_sbrk_r+0x1c>)
 80017ac:	2300      	movs	r3, #0
 80017ae:	4604      	mov	r4, r0
 80017b0:	4608      	mov	r0, r1
 80017b2:	602b      	str	r3, [r5, #0]
 80017b4:	f7fe ff60 	bl	8000678 <_sbrk>
 80017b8:	1c43      	adds	r3, r0, #1
 80017ba:	d102      	bne.n	80017c2 <_sbrk_r+0x1a>
 80017bc:	682b      	ldr	r3, [r5, #0]
 80017be:	b103      	cbz	r3, 80017c2 <_sbrk_r+0x1a>
 80017c0:	6023      	str	r3, [r4, #0]
 80017c2:	bd38      	pop	{r3, r4, r5, pc}
 80017c4:	200000d8 	.word	0x200000d8

080017c8 <__sread>:
 80017c8:	b510      	push	{r4, lr}
 80017ca:	460c      	mov	r4, r1
 80017cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80017d0:	f000 f8a8 	bl	8001924 <_read_r>
 80017d4:	2800      	cmp	r0, #0
 80017d6:	bfab      	itete	ge
 80017d8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80017da:	89a3      	ldrhlt	r3, [r4, #12]
 80017dc:	181b      	addge	r3, r3, r0
 80017de:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80017e2:	bfac      	ite	ge
 80017e4:	6563      	strge	r3, [r4, #84]	; 0x54
 80017e6:	81a3      	strhlt	r3, [r4, #12]
 80017e8:	bd10      	pop	{r4, pc}

080017ea <__swrite>:
 80017ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80017ee:	461f      	mov	r7, r3
 80017f0:	898b      	ldrh	r3, [r1, #12]
 80017f2:	05db      	lsls	r3, r3, #23
 80017f4:	4605      	mov	r5, r0
 80017f6:	460c      	mov	r4, r1
 80017f8:	4616      	mov	r6, r2
 80017fa:	d505      	bpl.n	8001808 <__swrite+0x1e>
 80017fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001800:	2302      	movs	r3, #2
 8001802:	2200      	movs	r2, #0
 8001804:	f000 f870 	bl	80018e8 <_lseek_r>
 8001808:	89a3      	ldrh	r3, [r4, #12]
 800180a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800180e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001812:	81a3      	strh	r3, [r4, #12]
 8001814:	4632      	mov	r2, r6
 8001816:	463b      	mov	r3, r7
 8001818:	4628      	mov	r0, r5
 800181a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800181e:	f000 b817 	b.w	8001850 <_write_r>

08001822 <__sseek>:
 8001822:	b510      	push	{r4, lr}
 8001824:	460c      	mov	r4, r1
 8001826:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800182a:	f000 f85d 	bl	80018e8 <_lseek_r>
 800182e:	1c43      	adds	r3, r0, #1
 8001830:	89a3      	ldrh	r3, [r4, #12]
 8001832:	bf15      	itete	ne
 8001834:	6560      	strne	r0, [r4, #84]	; 0x54
 8001836:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800183a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800183e:	81a3      	strheq	r3, [r4, #12]
 8001840:	bf18      	it	ne
 8001842:	81a3      	strhne	r3, [r4, #12]
 8001844:	bd10      	pop	{r4, pc}

08001846 <__sclose>:
 8001846:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800184a:	f000 b81b 	b.w	8001884 <_close_r>
	...

08001850 <_write_r>:
 8001850:	b538      	push	{r3, r4, r5, lr}
 8001852:	4d07      	ldr	r5, [pc, #28]	; (8001870 <_write_r+0x20>)
 8001854:	4604      	mov	r4, r0
 8001856:	4608      	mov	r0, r1
 8001858:	4611      	mov	r1, r2
 800185a:	2200      	movs	r2, #0
 800185c:	602a      	str	r2, [r5, #0]
 800185e:	461a      	mov	r2, r3
 8001860:	f7fe febe 	bl	80005e0 <_write>
 8001864:	1c43      	adds	r3, r0, #1
 8001866:	d102      	bne.n	800186e <_write_r+0x1e>
 8001868:	682b      	ldr	r3, [r5, #0]
 800186a:	b103      	cbz	r3, 800186e <_write_r+0x1e>
 800186c:	6023      	str	r3, [r4, #0]
 800186e:	bd38      	pop	{r3, r4, r5, pc}
 8001870:	200000d8 	.word	0x200000d8

08001874 <abort>:
 8001874:	b508      	push	{r3, lr}
 8001876:	2006      	movs	r0, #6
 8001878:	f000 f88e 	bl	8001998 <raise>
 800187c:	2001      	movs	r0, #1
 800187e:	f7fe fe88 	bl	8000592 <_exit>
	...

08001884 <_close_r>:
 8001884:	b538      	push	{r3, r4, r5, lr}
 8001886:	4d06      	ldr	r5, [pc, #24]	; (80018a0 <_close_r+0x1c>)
 8001888:	2300      	movs	r3, #0
 800188a:	4604      	mov	r4, r0
 800188c:	4608      	mov	r0, r1
 800188e:	602b      	str	r3, [r5, #0]
 8001890:	f7fe fec2 	bl	8000618 <_close>
 8001894:	1c43      	adds	r3, r0, #1
 8001896:	d102      	bne.n	800189e <_close_r+0x1a>
 8001898:	682b      	ldr	r3, [r5, #0]
 800189a:	b103      	cbz	r3, 800189e <_close_r+0x1a>
 800189c:	6023      	str	r3, [r4, #0]
 800189e:	bd38      	pop	{r3, r4, r5, pc}
 80018a0:	200000d8 	.word	0x200000d8

080018a4 <_fstat_r>:
 80018a4:	b538      	push	{r3, r4, r5, lr}
 80018a6:	4d07      	ldr	r5, [pc, #28]	; (80018c4 <_fstat_r+0x20>)
 80018a8:	2300      	movs	r3, #0
 80018aa:	4604      	mov	r4, r0
 80018ac:	4608      	mov	r0, r1
 80018ae:	4611      	mov	r1, r2
 80018b0:	602b      	str	r3, [r5, #0]
 80018b2:	f7fe febc 	bl	800062e <_fstat>
 80018b6:	1c43      	adds	r3, r0, #1
 80018b8:	d102      	bne.n	80018c0 <_fstat_r+0x1c>
 80018ba:	682b      	ldr	r3, [r5, #0]
 80018bc:	b103      	cbz	r3, 80018c0 <_fstat_r+0x1c>
 80018be:	6023      	str	r3, [r4, #0]
 80018c0:	bd38      	pop	{r3, r4, r5, pc}
 80018c2:	bf00      	nop
 80018c4:	200000d8 	.word	0x200000d8

080018c8 <_isatty_r>:
 80018c8:	b538      	push	{r3, r4, r5, lr}
 80018ca:	4d06      	ldr	r5, [pc, #24]	; (80018e4 <_isatty_r+0x1c>)
 80018cc:	2300      	movs	r3, #0
 80018ce:	4604      	mov	r4, r0
 80018d0:	4608      	mov	r0, r1
 80018d2:	602b      	str	r3, [r5, #0]
 80018d4:	f7fe feba 	bl	800064c <_isatty>
 80018d8:	1c43      	adds	r3, r0, #1
 80018da:	d102      	bne.n	80018e2 <_isatty_r+0x1a>
 80018dc:	682b      	ldr	r3, [r5, #0]
 80018de:	b103      	cbz	r3, 80018e2 <_isatty_r+0x1a>
 80018e0:	6023      	str	r3, [r4, #0]
 80018e2:	bd38      	pop	{r3, r4, r5, pc}
 80018e4:	200000d8 	.word	0x200000d8

080018e8 <_lseek_r>:
 80018e8:	b538      	push	{r3, r4, r5, lr}
 80018ea:	4d07      	ldr	r5, [pc, #28]	; (8001908 <_lseek_r+0x20>)
 80018ec:	4604      	mov	r4, r0
 80018ee:	4608      	mov	r0, r1
 80018f0:	4611      	mov	r1, r2
 80018f2:	2200      	movs	r2, #0
 80018f4:	602a      	str	r2, [r5, #0]
 80018f6:	461a      	mov	r2, r3
 80018f8:	f7fe feb2 	bl	8000660 <_lseek>
 80018fc:	1c43      	adds	r3, r0, #1
 80018fe:	d102      	bne.n	8001906 <_lseek_r+0x1e>
 8001900:	682b      	ldr	r3, [r5, #0]
 8001902:	b103      	cbz	r3, 8001906 <_lseek_r+0x1e>
 8001904:	6023      	str	r3, [r4, #0]
 8001906:	bd38      	pop	{r3, r4, r5, pc}
 8001908:	200000d8 	.word	0x200000d8

0800190c <__malloc_lock>:
 800190c:	4801      	ldr	r0, [pc, #4]	; (8001914 <__malloc_lock+0x8>)
 800190e:	f7ff bac9 	b.w	8000ea4 <__retarget_lock_acquire_recursive>
 8001912:	bf00      	nop
 8001914:	200000cc 	.word	0x200000cc

08001918 <__malloc_unlock>:
 8001918:	4801      	ldr	r0, [pc, #4]	; (8001920 <__malloc_unlock+0x8>)
 800191a:	f7ff bac4 	b.w	8000ea6 <__retarget_lock_release_recursive>
 800191e:	bf00      	nop
 8001920:	200000cc 	.word	0x200000cc

08001924 <_read_r>:
 8001924:	b538      	push	{r3, r4, r5, lr}
 8001926:	4d07      	ldr	r5, [pc, #28]	; (8001944 <_read_r+0x20>)
 8001928:	4604      	mov	r4, r0
 800192a:	4608      	mov	r0, r1
 800192c:	4611      	mov	r1, r2
 800192e:	2200      	movs	r2, #0
 8001930:	602a      	str	r2, [r5, #0]
 8001932:	461a      	mov	r2, r3
 8001934:	f7fe fe37 	bl	80005a6 <_read>
 8001938:	1c43      	adds	r3, r0, #1
 800193a:	d102      	bne.n	8001942 <_read_r+0x1e>
 800193c:	682b      	ldr	r3, [r5, #0]
 800193e:	b103      	cbz	r3, 8001942 <_read_r+0x1e>
 8001940:	6023      	str	r3, [r4, #0]
 8001942:	bd38      	pop	{r3, r4, r5, pc}
 8001944:	200000d8 	.word	0x200000d8

08001948 <_raise_r>:
 8001948:	291f      	cmp	r1, #31
 800194a:	b538      	push	{r3, r4, r5, lr}
 800194c:	4604      	mov	r4, r0
 800194e:	460d      	mov	r5, r1
 8001950:	d904      	bls.n	800195c <_raise_r+0x14>
 8001952:	2316      	movs	r3, #22
 8001954:	6003      	str	r3, [r0, #0]
 8001956:	f04f 30ff 	mov.w	r0, #4294967295
 800195a:	bd38      	pop	{r3, r4, r5, pc}
 800195c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800195e:	b112      	cbz	r2, 8001966 <_raise_r+0x1e>
 8001960:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8001964:	b94b      	cbnz	r3, 800197a <_raise_r+0x32>
 8001966:	4620      	mov	r0, r4
 8001968:	f000 f830 	bl	80019cc <_getpid_r>
 800196c:	462a      	mov	r2, r5
 800196e:	4601      	mov	r1, r0
 8001970:	4620      	mov	r0, r4
 8001972:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001976:	f000 b817 	b.w	80019a8 <_kill_r>
 800197a:	2b01      	cmp	r3, #1
 800197c:	d00a      	beq.n	8001994 <_raise_r+0x4c>
 800197e:	1c59      	adds	r1, r3, #1
 8001980:	d103      	bne.n	800198a <_raise_r+0x42>
 8001982:	2316      	movs	r3, #22
 8001984:	6003      	str	r3, [r0, #0]
 8001986:	2001      	movs	r0, #1
 8001988:	e7e7      	b.n	800195a <_raise_r+0x12>
 800198a:	2400      	movs	r4, #0
 800198c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8001990:	4628      	mov	r0, r5
 8001992:	4798      	blx	r3
 8001994:	2000      	movs	r0, #0
 8001996:	e7e0      	b.n	800195a <_raise_r+0x12>

08001998 <raise>:
 8001998:	4b02      	ldr	r3, [pc, #8]	; (80019a4 <raise+0xc>)
 800199a:	4601      	mov	r1, r0
 800199c:	6818      	ldr	r0, [r3, #0]
 800199e:	f7ff bfd3 	b.w	8001948 <_raise_r>
 80019a2:	bf00      	nop
 80019a4:	20000044 	.word	0x20000044

080019a8 <_kill_r>:
 80019a8:	b538      	push	{r3, r4, r5, lr}
 80019aa:	4d07      	ldr	r5, [pc, #28]	; (80019c8 <_kill_r+0x20>)
 80019ac:	2300      	movs	r3, #0
 80019ae:	4604      	mov	r4, r0
 80019b0:	4608      	mov	r0, r1
 80019b2:	4611      	mov	r1, r2
 80019b4:	602b      	str	r3, [r5, #0]
 80019b6:	f7fe fddc 	bl	8000572 <_kill>
 80019ba:	1c43      	adds	r3, r0, #1
 80019bc:	d102      	bne.n	80019c4 <_kill_r+0x1c>
 80019be:	682b      	ldr	r3, [r5, #0]
 80019c0:	b103      	cbz	r3, 80019c4 <_kill_r+0x1c>
 80019c2:	6023      	str	r3, [r4, #0]
 80019c4:	bd38      	pop	{r3, r4, r5, pc}
 80019c6:	bf00      	nop
 80019c8:	200000d8 	.word	0x200000d8

080019cc <_getpid_r>:
 80019cc:	f7fe bdca 	b.w	8000564 <_getpid>

080019d0 <_init>:
 80019d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019d2:	bf00      	nop
 80019d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019d6:	bc08      	pop	{r3}
 80019d8:	469e      	mov	lr, r3
 80019da:	4770      	bx	lr

080019dc <_fini>:
 80019dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019de:	bf00      	nop
 80019e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019e2:	bc08      	pop	{r3}
 80019e4:	469e      	mov	lr, r3
 80019e6:	4770      	bx	lr
